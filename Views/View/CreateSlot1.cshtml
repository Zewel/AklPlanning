<link href="~/assets/css/ToggleButton.css" rel="stylesheet" />
<style>
    #contextMenu {
        position: absolute;
        display: none;
    }

    .wrap {
        width: 90%;
        display: block;
        margin: 0 auto;
    }

    table {
        border: 1px solid rgba(221, 221, 221, 1);
    }

    tr:nth-child(even) {
        background: #F5F5F5
    }

    tr {
        position: relative;
    }

        tr:hover {
            background: #c9e8f7;
            position: relative;
        }

    .vl {
        /* border-left: 6px solid blue;
        position: absolute;
        left: 50%;
        margin-left: -3px;
        top: 0;*/
        margin-left: 10px;
        /*border-left: 2px solid darkgrey;*/
    }
    .modal-xl {
        width: 90% !important;
        max-width: 1600px;
    }
</style>


<div class="container-fluid">
    <div class="row" style=" aspect-ratio:inherit">
        <div class="col-md-12">
            <div class="card card-success">
                <div class="card-header">
                    <div class="row">

                        <div class="col-md-3">
                            <div class="row">
                                <div class="col-md-2">
                                    <label>Plan Year</label>
                                </div>
                                <div class="col-md-4">
                                    <select class="form-control select2" style="width: 100%;" onchange="PlanningSlotList()" id="dllYear">
                                    </select>
                                </div>
                                <div class="col-md-6">
                                    @*<button class="btn btn-info btn-xs" onclick="PlanningSlotListFull()" >Load Full</button>*@
                                    <div class="row">
                                        <div class="col-md-4">

                                            <label class="float-right">Runn. Plan</label>
                                        </div>
                                        <div class="col-md-3 ">
                                            <input type="checkbox" onclick="LoadFullPlanList()" id="fullPlanChecked" class="switch float-left">
                                        </div>
                                        <div class="col-md-5"><label class="float-left">Full Plan</label></div>
                                    </div>


                                </div>
                            </div>
                        </div>
                        <div class="col-md-2">
                            @*<label class="label" style="float:left"><span class="fa fa-list"></span> <h4> Aman Planning Board</h4></label>*@
                            <h4>Knitting's Plan Board</h4>

                        </div>
                        <div class="col-md-3">
                            <div class="row">
                                <div class="col-md-2">
                                    <label>Factory</label>
                                </div>
                                <div class="col-md-4">
                                    <select class="form-control select2" style="width: 100%;" onchange="PlanningSlotList()" id="dllFactory">
                                    </select>
                                </div>

                            </div>
                        </div>


                        <div class="col-md-4">
                            @*<button class="button btn-info" style="float:right" data-toggle="modal" data-target="#modal-sm"> <span class=" fa fa-crown"></span>Create Slot</button>*@
                            @* <input type="text" class="search float-left"  placeholder="Search Style..." id="overAllSearch" />*@
                            <div class="row">
                                <div class="col-md-5"></div>
                                <div class="col-md-2">
                                    <a class="btn-lg float-right" data-toggle="tooltip" data-placement="top" title="Search Style Plan History" onclick="StylePlanSummary()" style="cursor:pointer; margin-top:-10px "><i class="fa fa-file-text"></i></a>
                                </div>
                                <div class="col-md-3">
                                    
                                    <input type="text" class="search float-right" placeholder="Search Style..." id="overAllSearch" />
                                </div>
                                <div class="col-md-2">
                                    <button class="button btn-info overAllSearch" data-toggle="tooltip" data-placement="top" title="Search Style" onclick="PlanningSlotList()" style="border-radius:50%"><span class="fa fa-search"></span></button>
                                    @*<a class="btn-lg" data-toggle="tooltip" data-placement="top" title="Search Style" onclick="PlanningSlotList()" style="cursor:pointer"><i class="fa fa-file-text"></i></a>*@
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="card-body">
                    <div class="col-md-12" style="overflow-y:scroll; aspect-ratio:7/3 " id="PlanningSlotList">

                    </div>
                </div>
            </div>
            <div class="modal fadeInUp" id="modal-sm">
                <div class="modal-dialog modal-sm">
                    <div class="modal-content">
                        <div class="modal-header card-header" style="background-color:dodgerblue">
                            <h5 class="modal-title" id="headderId">Create Planning Slot</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="col-md-12" id="summaryBody">
                                @*<form id="myform">
                                <input type="text" name="field1" />
                                <input type="text" name="field2" />
                                <input type="submit" />
                            </form>*@

                                <input type="hidden" id="capacityAllocateId" />
                                <div class="form-group">
                                    <label class="control-label"> Year</label>
                                    <select name="allocationYear" class="form-control select2" style="width: 100%;" id="year" onchange="GetFactory('factory');GetGauge('gauge');GetBrand('brand')">
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label class="control-label"> Factory</label>
                                    <select name="factoryName" class="form-control select2" style="width: 100%;" id="factory" onchange="">
                                        <option value="">--Select Month--</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label class="control-label">Brand</label>
                                    <select class="form-control select2" style="width: 100%;" id="brand" onchange="">
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label class="control-label">Gauge</label>
                                    <select class="form-control select2" style="width: 100%;" id="gauge" onchange="">
                                        <option value="">--Select Gauge--</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label for="txtOrderDate">Lead Time</label>
                                    <input type='text' name="leadTime" class="form-control" id='leadTime' oninput="GetSlotDate()" required />
                                </div>
                                <div class="form-group">
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" id="manualFromDate" onclick="GetStatDateReCalculate()">
                                        <label class="form-check-label" for="manualFromDate" style="color:red">Manually Given Start Date</label>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label id="LastDateLabel" style="color:red"></label>
                                </div>
                                <div class="form-group">
                                    <label for="txtOrderDate">Start Date</label>
                                    <input type='text' class="form-control" id='startDate' onchange="CalculateDate()" />
                                </div>
                                <div class="form-group">
                                    <label for="txtOrderDate">End Date</label>
                                    <input type='text' class="form-control datepicker" id='endDate' />
                                    <label id="machineQty" style="color:red"></label>
                                    <input type="hidden" id="McnQty" />
                                </div>

                            </div>
                        </div>
                        <div class="modal-footer justify-content-between">
                            <button type="button" class="btn btn-outline-dark" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-info" onclick="SaveCreateSlot()">Save</button>
                            @*<input class="submit" type="submit" value="SUBMIT">*@
                        </div>
                    </div>
                    <!-- /.modal-content -->
                </div>
                <!-- /.modal-dialog -->
            </div>

            <div class="modal fadeInUp" id="viewStyle">
                <div class="modal-dialog modal-xl">
                    <div class="modal-content" style="height:500px">
                        <div class="modal-header card-header" style="background-color:dodgerblue">
                            <h5 class="modal-title" id="headderId">Planning PO List</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body col-md-12 table-responsive fix" id="viewBody">
                            @*<div class="col-md-12 table" id="viewBody">
                        </div>*@
                        </div>
                        <div class="modal-footer justify-content-between">
                            <button type="button" class="btn btn-outline-dark" data-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-outline-dark float-right" onclick="ExportAllData_HTML()">Print Excel</button>

                        </div>
                    </div>
                    <!-- /.modal-content -->
                </div>
                <!-- /.modal-dialog -->
            </div>

            <div class="modal fadeInUp" id="StyleSummaryView">
                <div class="modal-dialog modal-xl">
                    <div class="modal-content" style="height:600px">
                        <div class="modal-header card-header" style="background-color:dodgerblue">
                            <h5 class="modal-title" id="headderId"> Style Plan SummaryList</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body col-md-12 table-responsive fix" id="planSummaryBody">
                            @*<div class="col-md-12 table" id="viewBody">
                        </div>*@
                        </div>
                        @*<div class="modal-footer justify-content-between">
                            <button type="button" class="btn btn-outline-dark" data-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-outline-dark float-right" onclick="ExportAllData_HTML()">Print Excel</button>

                        </div>*@
                    </div>
                    <!-- /.modal-content -->
                </div>
                <!-- /.modal-dialog -->
            </div>




            <div class="modal fadeInUp" id="findStyleForAdd">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content" style="height:500px">
                        <div class="modal-header card-header" style="background-color:dodgerblue">
                            <h5 class="modal-title" id="headderId">Planning PO List</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body ui-front" id="viewBody">
                            <div class="row">
                                <div class="form-group">
                                    <label for="styleNo">Style No.</label>
                                    <input type="text" class="form-control" id="styleNoForAddPo" onblur="AllSplitList()" placeholder="Enter Style No.">
                                </div>
                            </div>
                            <div class="row table-responsive" style="height:200px; overflow-y:auto" id="SplitPoListDiv">

                            </div>
                        </div>
                        <div class="modal-footer justify-content-between">
                            <button type="button" class="btn btn-outline-dark" data-dismiss="modal">Close</button>

                        </div>
                    </div>
                    <!-- /.modal-content -->
                </div>
                <!-- /.modal-dialog -->
            </div>





            <div class="modal fadeInUp" id="StyleModal" role="dialog" style="overflow:scroll;" aria-labelledby="myModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-xl">
                    <div class="modal-content">
                        <div class="modal-header card-header" style="background-color:dodgerblue">
                            <div class="col-md-3">
                                <h5 class="modal-title" id="headderId"><span class="fa fa-list"></span> Add Po In Planning Slot</h5>
                            </div>
                            <div class="col-md-2">
                                <label id="factoryInfo" style="color:white"></label>
                            </div>

                            <div class="col-md-1">
                                <label id="leadTimeInfo" style="color:white"></label>
                                <input type="hidden" id="ActualLeadTime" />
                            </div>
                            <div class="col-md-1">
                                <label id="MachineLabel" style="color:white"></label>
                                <input type="hidden" id="slotId" />
                            </div>
                            <div class="col-md-1">
                                <label id="machineQtyInfo" style="color:white"></label>
                            </div>
                            <div class="col-md-3">
                                <div class="row">
                                    <div class="col-md-6">
                                        <label id="" style="color:red; float:right">Available Mcn.</label>
                                    </div>
                                    <div class="col-md-6">
                                        <label id="RemainingMachineInfo" style="color:red"></label>

                                        <a href="javascript:;" style="float:right; color:white;" onclick="ChangeEvent()">Change Lead Time</a>
                                    </div>
                                </div>

                            </div>
                            <div class="col-md-1">

                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            @*</div>*@

                        </div>
                        <div class="modal-body">
                            @*<div class="card-body" style="padding:0px 0px 4px 0px; height:300px">*@
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label style="display:none" id="newLtleble" for="leadTiemReCal">New Lead Time</label>
                                        <input type='number' class="form-control" id='leadTiemReCal' oninput="ReCalLeadTime()" required />
                                        <input type="hidden" id="slotIdInput" />
                                        <input type="hidden" id="slotEndDate" />
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <label style="color:red; float:right" id="newTotalMcnLbl"></label>
                                    <input type="hidden" id="newTotalMcn" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12 table table-responsive">
                                    <table id="myTable" class="table table-bordered table-responsive">
                                        <thead>
                                            <tr style="background-color: aliceblue">
                                                <th style="width:500px">PO NO<span style="color:red;font-weight:bold"> *</span></th>
                                                <th>Style<span style="color:red;font-weight:bold"> *</span></th>
                                                <th>Order Qty</th>
                                                <th>Actual Ship Date</th>
                                                <th>Already Knittings</th>
                                                <th>Remaining Knittings</th>
                                                <th>Jac Time</th>
                                                <th>Knitting Pro./Mc.</th>
                                                <th>Req. Machine</th>
                                                <th>Production/Day</th>
                                                <th>Trial Strat Date</th>
                                                <th>Knitting Start Date</th>
                                                <th>Knitting End Date</th>
                                                <th>Remarks</th>
                                                <th>Day Before Shipping</th>
                                                <th>Action</th>
                                            </tr>
                                        </thead>
                                        <tbody id="poList"></tbody>
                                        <tfoot>
                                            <tr id="trallocationListTable" style="background-color:khaki">

                                                <td style="width: 500px" class="select2-container--open">
                                                    <div class="row">
                                                        <div class="col-md-3">

                                                            <button class="btn btn-info btn-xs" onclick="FindStyleForNewAdd()" style="border-radius:50%"><span class="fa fa-plus"></span></button>
                                                            <input type="hidden" id="slotId" />
                                                        </div>
                                                        @*<div class="col-md-9">
                                                        <select class="form-control select2" style="width: 100%;" id="dllPo" onchange="GetStyleInfo()">
                                                        </select>

                                                    </div>*@
                                                    </div>
                                                </td>
                                                <td>

                                                    <input type="text" class="form-control" id="StyleName" />
                                                    <input type="hidden" id="StlNo" />
                                                </td>
                                                <td>

                                                    <input type="text" class="form-control" id="PoName" />
                                                    <input type="hidden" id="PooId" />
                                                    <input type="hidden" id="PoSplitId" value="0" />
                                                    <input type="hidden" id="OperationalPart" value="6" />
                                                    <input type="hidden" id="poOwnType" />
                                                </td>
                                                <td>

                                                    <input type="number" class="form-control" id="orderQty" oninput="" />

                                                </td>
                                                <td>

                                                    <input type="text" class="form-control" id="shipDate" />

                                                </td>
                                                <td>

                                                    <input type="text" class="form-control" id="AlreadyKnitt" />

                                                </td>
                                                <td>

                                                    <input type="text" class="form-control" id="RemainingQty" />

                                                </td>
                                                <td>

                                                    <input type="text" class="form-control" id="Jactime" />

                                                </td>
                                                <td>

                                                    <input type="text" class="form-control" id="ProductionPerMachine" />

                                                </td>

                                                <td>

                                                    <input type="text" class="form-control" id="ReqMachine" />

                                                </td>
                                                <td>

                                                    <input type="text" class="form-control" id="ProdutionPerDay" />

                                                </td>
                                                <td>

                                                    <input type="text" class="form-control datepicker" id="Traildate" />

                                                </td>
                                                <td>

                                                    <input type="text" class="form-control" id="KnittingStart" />

                                                </td>
                                                <td>

                                                    <input type="text" class="form-control" id="KnittingEnd" />

                                                </td>
                                                <td>

                                                    <input type="text" class="form-control" id="txtRemarks" />

                                                </td>
                                                <td>
                                                    @*<div class="form-group">
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            <button class="btn btn-primary btn-sm" onclick="AddRow()"><span class="fa fa-plus"></span></button>
                                                        </div>

                                                    </div>
                                                </div>*@
                                                    <button type="button" id="btnAddNewItem" class="btn btn-success" onclick="AddRow()"> <span class="fa fa-plus" /> </button>
                                                </td>
                                            </tr>
                                        </tfoot>
                                    </table>
                                </div>

                            </div>
                        </div>
                        <div class="modal-footer justify-content-between">
                            <button type="button" class="btn btn-outline-dark" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-info" id="slotSaveBtn" onclick="SaveData()">Save</button>
                            @*<input class="submit" type="submit" value="SUBMIT">*@
                        </div>
                    </div>
                    <!-- /.modal-content -->
                </div>
                <!-- /.modal-dialog -->
            </div>

            <ul id="myMenu" class="contextMenu">

                <li class="edit"><a href="#edit">Edit</a></li>

                <li class="cut separator"><a href="#cut">Cut</a></li>

                <li class="copy"><a href="#copy">Copy</a></li>

                <li class="paste"><a href="#paste">Paste</a></li>

                <li class="delete"><a href="#delete">Delete</a></li>

                <li class="quit separator"><a href="#quit">Quit</a></li>

            </ul>

            <div class="modal fadeInUp" id="PlanHisModal">
                <div class="modal-dialog modal-xl">
                    <div class="modal-content">
                        <div class="modal-header card-header">
                            <h4 class="modal-title" id="headderId">Plan History</h4>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">


                            <div class="col-md-12" id="PlanHisBody">

                            </div>
                        </div>

                    </div>
                    <!-- /.modal-content -->
                </div>
                <!-- /.modal-dialog -->
            </div>
        </div>
    </div>

</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

<script>

    $(function () {
        //var $contextMenu = $("#contextMenu");

        //$("body table tbody tr").on("contextmenu", function (e) { // What I changed
        //    debugger;

        //    $contextMenu.attr("tr", $(this).find('td').html()); // Added: Save the tr num in the menu
        //    console.log($contextMenu.attr("tr")); // Display the saved value, just to see if it works
        //    $contextMenu.css({
        //        left: e.pageX,
        //        top: e.pageY
        //    }).show(); // Modified
        //    return false;
        //});

        //$('html').click(function () {
        //    $contextMenu.hide();
        //});


        //var selected_row;
        //var $contextMenu = $("#contextMenu");
        //var tMachine1 = 0;

        //$("body").on("contextmenu", "table tr", function (e) {
        //    selected_row = $(this).data("id");
        //    var tMachine = parseInt($(this).find('.reqMachine').val());
        //     tMachine1 = $(this).find("td").eq(3).text();

        //    $contextMenu.css({
        //        display: "block",
        //        left: e.pageX,
        //        top: e.pageY
        //    });
        //    return false;
        //});
        //$(".selectOption").click(function () {
        //    alert("row number " + tMachine1 + " clicked");
        //})
        //$('html').click(function () {
        //    $contextMenu.hide();
        //});
        $("#target").contextMenu({
            menu: 'myMenu'
        },
            function (action, el, pos) {
                // onClick callback
                alert(
                    'Action: ' + action + '\n\n' +
                    'Element ID: ' + $(el).attr('id') + '\n\n' +
                    'X: ' + pos.x + '  Y: ' + pos.y + ' (relative to element)\n\n' +
                    'X: ' + pos.docX + '  Y: ' + pos.docY + ' (relative to document)'
                );
            });
        $('#target').disableContextMenu();
        $('#target').enableContextMenu();
       //////////////////


        $(document).on('show.bs.modal', '.modal', function () {
            const zIndex = 1040 + 10 * $('.modal:visible').length;
            $(this).css('z-index', zIndex);
            setTimeout(() => $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack'));
        });

        $("#styleNoForAddPo").autocomplete(

            {


            source: function (request, response) {
                debugger;
                $.ajax({
                    url: apiHeader + "api/Common/GetStlNo/" + request.term ,
                    dataType: "json",
                    success: function (data) {
                        debugger;
                        var stlNo = [];
                        $.each(data, function (i, item) {
                            stlNo.push(item.StlDesc);
                        });
                        response(stlNo);

                    }
                });
            },
            minLength: 3,
            //select: function (event, ui) {
            //    log(ui.item ?
            //        "Selected: " + ui.item.label :
            //        "Nothing selected, input was " + this.value);
            //},
            //open: function () {
            //    $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
            //},
            //close: function () {
            //    $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
            //}
        });

        $("#overAllSearch").autocomplete({

            source: function (request, response) {
                $.ajax({
                    url: apiHeader + "api/Common/GetStlNo/" + request.term,
                    dataType: "json",
                    success: function (data) {
                        var stl = [];
                        $.each(data, function (i, item) {
                            stl.push(item.StlDesc);
                        });
                        response(stl);

                    }
                });
            },
            minLength: 3,
            //select: function (event, ui) {
            //    log(ui.item ?
            //        "Selected: " + ui.item.label :
            //        "Nothing selected, input was " + this.value);
            //},
            //open: function () {
            //    $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
            //},
            //close: function () {
            //    $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
            //}
        });

            //$("#PlanningSlotList").mark($('#overAllSearch').val());
            //$('#searchfor').on('input', function () {
            //    debugger;
            //    var page = $('#PlanningSlotList');
            //    var pageText = page.text().replace("<span>", "").replace("</span>");
            //    var searchedText = $.trim($('#searchfor').val());
            //    var theRegEx = new RegExp("(" + searchedText + ")", "igm");
            //    var newHtml = pageText.replace(theRegEx, "<span>$1</span>");
            //    page.html(newHtml);
            //    $("span").scrollintoview();
            //});

            $("overAllSearch").on("input", function () {
                debugger;
                // Determine specified search term
                var searchTerm = $(this).val();
                // Highlight search term inside a specific context
                $("#PlanningSlotList").unmark().mark(searchTerm);
            }).trigger("inputs").focus();

            //$('#datetimepicker1').datetimepicker();
            //$('#reservationdate').datetimepicker({
            //    format: 'L'
            //});
            $(document).on("click", ".details-control", function (e) {
                $(this).closest('tr').toggleClass('expand').nextUntil('tr.header').slideToggle(100);
            });
            GetAllocationYear('year');
        LoadYear('dllYear');
        GetFactory('dllFactory');
            $('#createSlot').validate({ // initialize the plugin
                rules: {
                    allocationYear: {
                        required: true
                    },
                    factoryName: {
                        required: true
                    }
                }
            });

            $('#InitalPlanning').dataTable({
                "bPaginate": false,
            });

            $('#startDate').attr("disabled", true);
            $('#endDate').attr("disabled", true);
        $('#leadTiemReCal').hide();

            /////////////////mouse right click R$d//////////////////////////////////////////

            //$.contextMenu({
            //    selector: '.context-menu-one',
            //    callback: function (key, options) {
            //        var m = "clicked: " + key;
            //        window.console && console.log(m) || alert(m);
            //    },
            //    items: {
            //        "edit": { name: "Edit", icon: "edit" },
            //        "cut": { name: "Cut", icon: "cut" },
            //        copy: { name: "Copy", icon: "copy" },
            //        "paste": { name: "Paste", icon: "paste" },
            //        "delete": { name: "Delete", icon: "delete" },
            //        "sep1": "---------",
            //        "quit": {
            //            name: "Quit", icon: function () {
            //                return 'context-menu-icon context-menu-icon-quit';
            //            }
            //        }
            //    }
            //});

            //$('.context-menu-one').on('click', function (e) {
            //    console.log('clicked', this);
            //})

            ///////////// END//////////////////////////////////////////////////////////

        //$(".overAllSearch").each(function () {
        //    debugger;
        //    var data = $("#overAllSearch").val();
        //    $(this).html(function (index, oldHTML) {
        //        return oldHTML.replace(
        //            data,
        //            "<span style='color:green;'>" + data + "</span>");
        //    });

        //});
        });

    function FindData(event) {
        var data = $("#overAllSearch").val();
        window.find(data);
        //FindData();
    }
        function LoadYear(elementId) {
            $.ajax({
                url: apiHeader + 'api/Common/GetAllocateYear',
                type: "GET",
                dataType: "json",
                async: false,
                success: function (result) {

                    if (result.length > 0) {
                        $('#' + elementId + '').empty();
                        for (var i = 0; i < result.length; i++) {

                            $('#' + elementId + '').append($("<option></option>").val(result[i].YearId).html(result[i].YearName));
                        }
                    }

                    $('#dllYear').val(currentYear).trigger('change');

                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });

        }

    function LoadPlanStatus(elementId) {
            $.ajax({
                url: apiHeader + 'api/Common/GetAllPlanStatus',
                type: "GET",
                dataType: "json",
                async: false,
                success: function (result) {

                    if (result.length > 0) {
                        $('#' + elementId + '').empty();
                        $('#' + elementId + '').append("<option value=''>--Select Status Type--</option>");
                        for (var i = 0; i < result.length; i++) {

                            $('#' + elementId + '').append($("<option></option>").val(result[i].PlanStatusId).html(result[i].PlanStatusName));
                        }
                    }


                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });

        }


        function GetFactory(elamentName) {

            var yearId = parseInt($('#year').val());
            $.ajax({
                url: apiHeader + 'api/Common/GetAllMachineQty/' + yearId,
                type: "GET",
                dataType: "json",
                async: false,
                success: function (result) {

                    allYears = result
                    const key = 'ShortForm';
                    const FactoryResult = [...new Map(result.map(item =>
                        [item[key], item])).values()];
                    if (result.length > 0) {
                        $('#' + elamentName + '').empty();
                        $('#' + elamentName + '').append("<option value=''>--Select Factory--</option>");
                        for (var i = 0; i < FactoryResult.length; i++) {

                            $('#' + elamentName + '').append($("<option></option>").val(FactoryResult[i].FactoryId).html(FactoryResult[i].ShortForm));
                        }
                    }
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });

        }
        function GetGauge(elamentName) {

            var yearId = parseInt($('#year').val());
            $.ajax({
                url: apiHeader + 'api/Common/GetAllMachineQty/' + yearId,
                type: "GET",
                dataType: "json",
                async: false,
                success: function (result) {

                    allYears = result
                    const key = 'GaugeId';
                    const FactoryResult = [...new Map(result.map(item =>
                        [item[key], item])).values()].sort();
                    if (result.length > 0) {
                        $('#' + elamentName + '').empty();
                        $('#' + elamentName + '').append("<option value=''>--Select Gauge--</option>");
                        for (var i = 0; i < FactoryResult.length; i++) {

                            $('#' + elamentName + '').append($("<option></option>").val(FactoryResult[i].GaugeId).html(FactoryResult[i].GaugeDesc));
                        }
                    }
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });

    }
    function GetBrand(elamentName) {

            var yearId = parseInt($('#year').val());
            $.ajax({
                url: apiHeader + 'api/Common/GetAllMachineQty/' + yearId,
                type: "GET",
                dataType: "json",
                async: false,
                success: function (result) {

                    allYears = result
                    const key = 'BrandId';
                    const FactoryResult = [...new Map(result.map(item =>
                        [item[key], item])).values()].sort();
                    if (result.length > 0) {
                        $('#' + elamentName + '').empty();
                        $('#' + elamentName + '').append("<option value=''>--Select Brand--</option>");
                        for (var i = 0; i < FactoryResult.length; i++) {

                            $('#' + elamentName + '').append($("<option></option>").val(FactoryResult[i].BrandId).html(FactoryResult[i].McnType));
                        }
                    }
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });

        }
        function GetSlotDate() {

            var yearId = parseInt($('#year').val());
            var factoryId = parseInt($('#factory').val());
            var brandId = parseInt($('#brand').val());
            var gaugeId = parseInt($('#gauge').val());
            var leadTime = parseInt($('#leadTime').val());
            if (isNaN(yearId) || isNaN(factoryId) || isNaN(gaugeId) || isNaN(leadTime)) {

                toastr.warning('Please Select All List Element');
            } else {
                $.ajax({
                    url: apiHeader + 'api/CreateSlot/StartDateEndDate/' + yearId + '/' + factoryId + '/' + brandId + '/' + gaugeId + '/' + leadTime,
                    type: "GET",
                    dataType: "json",
                    async: false,
                    success: function (result) {

                        $('#startDate').val(result[0].StartDate);
                        $('#endDate').val(result[0].EndDate);
                        $('#McnQty').val(result[0].TotalMachineQty);
                        $('#machineQty').html("Total Machine Qty is:" + result[0].TotalMachineQty);

                    },
                    error: function (errormessage) {
                        alert(errormessage.responseText);
                    }
                });
            }

        }

    function GetStatDateReCalculate() {

        if ($('#manualFromDate').prop("checked") == true) {

            var yearId = parseInt($('#year').val());
            var factoryId = parseInt($('#factory').val());
            var brandId = parseInt($('#brand').val());
            var gaugeId = parseInt($('#gauge').val());
            if (isNaN(yearId) || isNaN(factoryId) || isNaN(gaugeId)) {

                toastr.warning('Please Select All List Element');
            } else {
                $.ajax({
                    url: apiHeader + 'api/CreateSlot/GetLastDateForPlanning/' + yearId + '/' + factoryId + '/' + brandId + '/' + gaugeId,
                    type: "GET",
                    dataType: "json",
                    async: false,
                    success: function (result) {


                        $('#startDate').attr("disabled", false);
                        $('#startDate').val("");
                        alert(result[0].LastDate);
                       // $('#startDate').attr('min', result[0].LastDate);
                        //('#startDate').datepicker({
                        //    "minDate": '0'
                        //});
                        $('#LastDateLabel').text("Last Planning Slot Date Is: " + result[0].LastDate);
                        var dates = result[0].LastDate;
                        $('#startDate').datepicker({
                            autoclose: true,
                            dateFormat: 'dd-M-yy',
                            minDate: new Date(dates)

                        });
                    },
                    error: function (errormessage) {
                        alert(errormessage.responseText);
                    }
                });
            }

        } else {
            $('#startDate').val("");
            $('#startDate').attr("disabled", true);
            GetSlotDate();
        }
    }

        function CalculateDate() {

            var previousDate = $("#LastDateLabel").text();
            var date =$("#startDate").val();
            var leadTime = $("#leadTime").val();
            if (new Date(date) <= new Date(previousDate)) {
                toastr.warning("Please Input Valid Date");
                $("#startDate").val("");
                $("#endDate").val("");
                return;
            } else {
                $.ajax({
                    url: apiHeader + 'api/CreateSlot/CalculateLastDateForPlanning/' + date + '/' + leadTime,
                    type: "GET",
                    dataType: "json",
                    async: false,
                    success: function (result) {


                        $('#startDate').attr("disabled", false);
                        $('#endDate').val(result[0].EndDate);

                    },
                    error: function (errormessage) {
                        alert(errormessage.responseText);
                    }
                });
            }
        }
        function SaveCreateSlot() {

            var obj = {
                YearId: parseInt($('#year').val()),
                FactoryId: parseInt($('#factory').val()),
                BrandId: parseInt($('#brand').val()),
                GaugeId: parseInt($('#gauge').val()),
                LeadTime: parseInt($('#leadTime').val()),
                StartDate:$('#startDate').val(),
                EndDate: $('#endDate').val(),
                StageId :1,
                NoOfMachine: parseInt($('#McnQty').val())
            };
            $.ajax({
                type: "POST",
                url: apiHeader + 'api/CreateSlot/SaveSlot',
                contentType: "application/json;charset=utf-8",
                data: JSON.stringify(obj),
                success: function (result) {

                    if (result == true) {
                        toastr.success(
                            'Save SuccessFull!',
                            'Yes',
                            {
                                timeOut: 3000,
                                fadeOut: 3000,
                                onHidden: function () {
                                    window.location.reload();
                                }
                            }
                        );
                    } else {
                        toastr.warning('problems finding.');
                    }

                },

                complete: function () {
                   // window.location.href = '@Url.Action("CreateSlot", "View")';

                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }

        function PlanningSlotList() {
            var year = $('#dllYear').val();
            var factoryId = isNaN($('#dllFactory').val()) ? 0 : $('#dllFactory').val();
            var styleNumber = $('#overAllSearch').val();
            if ($('#fullPlanChecked').is(":checked")) {
                   var urlpath = '@Url.Action("PlanningSlotPartialFull", "PartialView")';
            $.ajax({
                url: urlpath,
                dataType: 'html',
                type: "Get",
                data: { yearId: year, factoryId: factoryId},
                async: false,
                success: function (data) {


                    $("#PlanningSlotList").html("");
                    $("#PlanningSlotList").html(data);
                    $(".details-control").trigger("click");
                }

            });
            } else {
                var urlpath = '@Url.Action("PlanningSlotPartial1", "PartialView")';
            $.ajax({
                url: urlpath,
                dataType: 'html',
                type: "Get",
                data: { yearId: year, factoryId: factoryId, styleNumber:styleNumber},
                async: false,
                success: function (data) {


                    $("#PlanningSlotList").html("");
                    $("#PlanningSlotList").html(data);
                    $(".details-control").trigger("click");
                }

            });
            }


        }

        function PlanningSlotListFull() {
             var year = $('#dllYear').val();

             var urlpath = '@Url.Action("PlanningSlotPartialFull", "PartialView")';
            $.ajax({
                url: urlpath,
                dataType: 'html',
                type: "Get",
                data: { yearId:year},
                async: false,
                success: function (data) {


                    $("#PlanningSlotList").html("");
                    $("#PlanningSlotList").html(data);
                    $(".details-control").trigger("click");
                }

            });
        }

    function LoadFullPlanList() {
        if ($('#fullPlanChecked').is(":checked")) {
            PlanningSlotListFull();
        } else {
            PlanningSlotList();
        }
    }

    var leadTime = 0;

    function FindStyleForNewAdd() {

        $('#findStyleForAdd').modal({ backdrop: 'static', keyboard: true })
    }
    function AddStyle(element) {

        //$('#StyleModal').modal();
        //$('#StyleModal').html("");
        $('#StyleModal').modal({ backdrop: 'static', keyboard: true })
        currentMachine = $('#machineQtyInfo').text();
        $.ajax({
            url: apiHeader + 'api/CreateSlot/GetSlotInfo/' + element,
            type: "GET",
            dataType: "json",
            async: false,
            success: function (result) {

                $('#factoryInfo').text(result[0].YearName + " " + result[0].ShortForm + " " + result[0].McnType + " " + result[0].GaugeDesc + " ");
                $('#leadTimeInfo').text("Lead Time: " + result[0].LeadTime);
                $('#ActualLeadTime').val(result[0].LeadTime);
                $('#MachineLabel').text("Total Machine: ");
                $('#slotId').val(element);
                $('#machineQtyInfo').text(result[0].NoOfMachine);
                leadTime = result[0].LeadTime;

            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
        LoadPoNo(element);
        AddPreviousStyle($('#slotId').val());
    }
    function RemoveRow(trId) {
        if (($('#myTable tbody tr').length) > 1) {
            $('#tr_' + trId + '').remove();
        }

    }
    /////////////////////////////////////////////

    function LoadPoNo(SlotId) {
        $('#dllPo').empty();
        debugger;
        $.ajax({
            url: apiHeader + 'api/CreateSlot/GetAllPoForActualPlanning/' + SlotId,
            type: "GET",
            dataType: "json",
            async: false,
            success: function (result) {

                if (result.length > 0) {
                    $('#dllPo').empty();
                    $('#dllPo').append("<option value=''>--Select PO No--</option>");
                    for (var i = 0; i < result.length; i++) {

                        $('#dllPo').append($("<option></option>").val(result[i].POCod).html(result[i].PONo));
                    }
                    //$("#dllPo").select2({ dropdownParent: $("#select") });
                    $(".select2").select2({
                        width: '100%'
                    });
                }
                $('#slotId').val(SlotId);

            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });

        }
    function AllSplitList() {
        var slotId = $('#slotId').val();
            var styleNo = $('#styleNoForAddPo').val();
        debugger;

        $.ajax({
            url: apiHeader + 'PartialView/GetAllPoForActualPlanning/',
            type: "GET",
            dataType: "html",
            async: false,
            data: { slotId: slotId, styleNo: styleNo },
            success: function (result) {
                $('#SplitPoListDiv').html(result);
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });

        }

        function GetStyleInfo(poId, poSplitId,poType) {

            var poId = poId;
            var splitId = poSplitId;
            if (poId > 0) {
                $.ajax({
                    url: apiHeader + 'api/CreateSlot/GetAllSplitPoDetails/' + poId + '/' + splitId + '/' + poType,
                    type: "GET",
                    dataType: "json",
                    async: false,
                    success: function (result) {
                        $('#findStyleForAdd').modal('toggle');
                        debugger;
                        $("#StyleName").val(result[0].StyleNumber);
                        $("#StlNo").val(result[0].stylecode);
                        $("#orderQty").val(result[0].POQty);
                        $("#shipDate").val(result[0].ExftyNew);
                        $("#AlreadyKnitt").val(result[0].AlreadyKnittingsQty);
                        $("#RemainingQty").val(result[0].RemainingQty);
                        $("#Jactime").val(result[0].SmvKn);
                        $("#txtRemarks").val(result[0].CriticalType);
                        $("#PooId").val(result[0].POCod);
                        $("#PoName").val(result[0].PONo);
                        $("#PoSplitId").val(result[0].PoSplitId);
                        $("#OperationalPart").val(result[0].KntOperationId);
                        $("#poOwnType").val(result[0].PoType);
                        CalculationForMachine(parseInt(result[0].SmvKn), parseInt(result[0].RemainingQty));
                    },
                    error: function (errormessage) {
                        alert(errormessage.responseText);
                    }
                });
            }
            else {
                $('#Traildate').val("");
                $('#stylecode').val("");
                $('#StyleName').val("");
                $('#orderQty').val("");
                $('#shipDate').val("");
                $('#AlreadyKnitt').val("");
                $('#RemainingQty').val("");
                $('#Jactime').val("");
                $('#txtRemarks').val("");
                $('#ProductionPerMachine').val("");
                $('#ReqMachine').val("");
                $('#ProdutionPerDay').val("");
                $('#KnittingStart').val("");
                $('#KnittingEnd').val("");
            }
        }

        function CalculationForMachine( smv,ocQty) {
            var slotId = $('#slotId').val();

            $.ajax({
                url: apiHeader + 'api/CreateSlot/GetSlotDetailsForCalCuMcn/' + slotId,
                type: "GET",
                dataType: "json",
                async: false,
                success: function (result) {
                    debugger;
                    var productionPerMcn = parseInt(parseInt(result[0].DailyWorkMunit) / parseInt(smv));
                    var TotalProductionPerMcn = parseInt(productionPerMcn * parseInt(result[0].LeadTime));
                    var reqMcn = Math.ceil(parseInt(ocQty) / TotalProductionPerMcn);
                    $("#ProductionPerMachine").val(productionPerMcn);
                    $("#ReqMachine").val(reqMcn);
                    $("#ProdutionPerDay").val(productionPerMcn * reqMcn);
                    //$("#Traildate").val();
                    $("#KnittingStart").val(result[0].StartDate);
                    $("#KnittingEnd").val(result[0].EndDate);
                    var trlDate = new Date(new Date(result[0].StartDate) - 5 * 24 * 60 * 60 * 1000);
                    $("#Traildate").val(moment(trlDate).format('DD MMM YYYY'));
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
    }
    var currentMachine = 0;
    function AddRow() {

        var totalMachine = $('#machineQtyInfo').text();
        var poCode = $("#PooId").val();
        var poNo = $("#PoName").val();
        //var poNo = $("#dllPo option:selected").text();
        if (poCode == null || poCode < 0 || poCode == "") {
            alert("--Please Select PoNO--");
            return;
        }
        var TrailDate = $('#Traildate').val();
        if (TrailDate == null || TrailDate < 0 || TrailDate == "") {
            alert("--Please Select TrialDate--");
            return;
        }
        var rowCount = parseInt($('#myTable tbody tr').length);
        if (rowCount == 0) {
            currentMachine = parseInt(totalMachine);
        } else {
            currentMachine = parseInt($('#RemainingMachineInfo').text());
        }
        var stlCode = $('#StlNo').val();
        var style = $('#StyleName').val();
        var ocQty = $('#orderQty').val();
        var shipDate = $('#shipDate').val();
        var alreadyKnitt = $('#AlreadyKnitt').val();
        var remainingQty = $('#RemainingQty').val();
        var smvKn = $('#Jactime').val();
        var stltype = $('#txtRemarks').val();
        var productionPeraMcn = $('#ProductionPerMachine').val();
        var reqMcn = $('#ReqMachine').val();
        var productionPerDay = $('#ProdutionPerDay').val();
        var knittStart = $('#KnittingStart').val();
        var KnittEnd = $('#KnittingEnd').val();
        var poSplitId = $('#PoSplitId').val();
        var CreateBy = $('#SessionUserId').val();
        //var trlDate = new Date(new Date(startDate) - 5 * 24 * 60 * 60 * 1000);
        //var createDate = new Date();
        var formattedDate = moment().format('MM/DD/YYYY');
        var poOwnerType = $('#poOwnType').val();
        debugger;
       // var dayBeforeShipping = daysdifference(new Date(KnittEnd), new Date(shipDate));
        var totalValue = ( new Date(shipDate) - new Date(KnittEnd));
        var dayBeforeShipping = totalValue / (1000 * 3600 * 24);
        if (currentMachine > 0) {
            if (reqMcn > currentMachine) {
                reqMcn = currentMachine
                productionPerDay = reqMcn * productionPeraMcn
                remainingQty = parseInt(parseInt(productionPerDay) * leadTime);
            }
            var rowCountItem = parseInt($('#myTable tbody tr').length);
            var sl = rowCountItem + 1;
            var dtThreadPositionSize = $('#myTable');
            var tableBodyThreadPositionSize = dtThreadPositionSize.find('tbody');
            //tableBody.empty();

            tableBodyThreadPositionSize.append('<tr id="tr_' + sl + '">'
                + '<td style="display:none;">  <label  style="width: 150px" class="planningSlotDetailsId" name="planningSlotDetailsId" id = "planningSlotDetailsId' + sl.toString() + '"  > ' + 0 + ' </label ></td>'
                + '<td style="display:none;">  <label  style="width: 150px" class="poCodc" name="poCod" id = "poCod' + sl.toString() + '"  > ' + poCode + ' </label ></td>'
                + '<td >  <label  style="width: 120px" name="poNO" id = "poNO' + sl.toString() + '"  > ' + poNo + ' </label ></td>'
                + '<td style="display:none;"><input  style="width: 120px" type="text" class="stlCodec" name="stlCode" id="PONumber' + sl.toString() + '"value="' + stlCode + '"  /></td>'
                + '<td style="display:none;"><input  style="width: 120px" type="text" class="poSplitId" name="poSplitId" id="poSplitId' + sl.toString() + '"value="' + poSplitId + '"  /></td>'
                + '<td style="display:none;"><input  style="width: 120px" type="text" class="createDate" name="createDate" id="createDate' + sl.toString() + '"value="' + formattedDate + '"  /></td>'
                + '<td style="display:none;"><input  style="width: 120px" type="text" class="createBy" name="createBy" id="createBy' + sl.toString() + '"value="' + CreateBy  + '"  /></td>'
                + '<td style="display:none;"><input  style="width: 120px" type="number" class="oType" name="ownerType" id="ownerType' + sl.toString() + '"value="' + poOwnerType + '"  /></td>'

                + '<td style=""><a href="#" onclick="ShowStlData(' + stlCode + ');return false;"><label name="stlNo" style="cursor:pointer">' + style + ' </label></a></td>'
                + '<td style=""><label name="ocQty" class="ocQtyc"  id = "ocQty' + sl.toString() + '"  > ' + ocQty + ' </label ></td>'
                + '<td style=""><label style="width: 120px" name="ShipDate"  id = "ShipDate' + sl.toString() + '"  > ' + shipDate + ' </label ></td>'

                + '<td style=""> <label  style="width: 60px" class="alreadyKnitt" name="alreadyKnitt" id = "alreadyKnitt' + sl.toString() + '"  > ' + alreadyKnitt + ' </label ></td>'
                + '<td style=""><input  style="width: 70px;" type="text" class="remainingQty" id="remaining' + sl.toString() + '" oninput = "CalculateMachine(this)"  value="' + remainingQty + '"     /></td>'
                + '<td style="">  <label name="smvKn" class="smvKn" id = "smvKn' + sl.toString() + '"  > ' + smvKn + ' </label ></td>'

                + '<td style=""><input  style="width: 70px;" name="productionPeraMcn" class="productionPeraMcn" readonly type="text" id="ProdMth' + sl.toString() + '" value="' + productionPeraMcn + '"     onchange = "CalLeadTime(' + sl.toString() + ')"  /></td>'
                + '<td style=""><input type="number" style="width: 67px;" class="reqMachine" name="reqMachine"  id="reqMachine' + sl.toString() + '" value="' + reqMcn + '"     /></td>'
                + '<td style=""><input  style="width: 70px;" class="totalProductionPerDay" readonly type="text" name="productionPerDay" id="FabIns' + sl.toString() + '"   value="' + productionPerDay + '"     /></td>'
                + '<td style=""><input style="width: 120px" class="trailDate" name="TrailDate"  type="text" id="Comments' + sl.toString() + '" value="' + TrailDate + '"  /></td>'
                + '<td style=""><input style="width: 120px"  name="knittStart" type="text" id="Comments' + sl.toString() + '" value="' + knittStart + '"  /></td>'

                + '<td style=""><input  style="width: 70px;" class="date_Picker" name="KnittEnd" readonly type="text" id="PCD' + sl.toString() + '" value="' + KnittEnd + '"     /></td>'
                + '<td style=""><input  style="width: 70px;" class="remarks" readonly type="text" name="stltype" id="PPM' + sl.toString() + '" value="' + stltype + '"     /></td>'
                + '<td style=""><input  style="width: 70px;" class="daysBeforeShipping" readonly type="text" name="dayBeforeShipping" id="PPM' + sl.toString() + '" value="' + dayBeforeShipping + '"     /></td>'
                + '<td style=""><input type="button" value="Delete Row" onclick="DeleteRow(this)"></td>'
                + '</tr>');
            $("#dllPo").val("").trigger("change");
            $('#Traildate').val("");
            $('#stylecode').val("");
            $('#StyleName').val("");
            $('#orderQty').val("");
            $('#shipDate').val("");
            $('#AlreadyKnitt').val("");
            $('#RemainingQty').val("");
            $('#Jactime').val("");
            $('#txtRemarks').val("");
            $('#ProductionPerMachine').val("");
            $('#ReqMachine').val("");
            $('#ProdutionPerDay').val("");
            $('#KnittingStart').val("");
            $('#KnittingEnd').val("");
            $('#PooId').val(0);
            $('#PoName').val("");

            var total = 0;
            $('#myTable tbody tr').each(function (i) {
                //var value = parseInt($('#reqMachine' + i).val());
                var value = parseInt($(this).find('.reqMachine').val());
                if (!isNaN(value)) {
                    total += value;
                }
            });
            debugger;
            $('#RemainingMachineInfo').text( totalMachine - total);
            currentMachine = totalMachine - total;
        }
        else {
            toastr.warning('No Machine Are Available');
        }
    }


    function AddPreviousStyle(slotId) {
        debugger;
        var slotId = slotId;
        $('#slotIdInput').val(slotId);
        $.ajax({
            url: apiHeader + 'api/CreateSlot/GetSlotDetails/' + slotId,
            type: "GET",
            dataType: "json",
            async: false,
            success: function (result) {
                $("#poList").empty();
                if (result.length > 0) {
                    var rowCountItem = parseInt($('#myTable tbody tr').length);
                    var sl = rowCountItem + 1;
                    var dtThreadPositionSize = $('#myTable');
                    var tableBodyThreadPositionSize = dtThreadPositionSize.find('tbody');
                    //tableBody.empty();
                    var total = 0;
                    $.each(result, function (index, s) {

                        total += s.RequiredMachine;


                        var dayBeforeShipping = daysdifference(new Date(s.ExftyNew), new Date(s.EndDate));

                        tableBodyThreadPositionSize.append('<tr id="tr_' + sl + '" style="background-color:linen" >'
                            + '<td style="display:none;">  <label  style="width: 150px" class="planningSlotDetailsId" name="planningSlotDetailsId" id = "planningSlotDetailsId' + sl.toString() + '"  > ' + s.PlanningSlotDetailsId + ' </label ></td>'
                            + '<td style="display:none;">  <label  style="width: 150px" class="poCodc" name="poCod" id = "poCod' + sl.toString() + '"  > ' + s.POCod + ' </label ></td>'
                            + '<td style="width: 200px">  <label  style="width: 200px" name="poNO" id = "poNO' + sl.toString() + '"  > ' + s.PONo + ' </label ></td>'
                            + '<td style="display:none;"><input  style="width: 120px" type="text" class="poSplitId" name="poSplitId" id="poSplitId' + sl.toString() + '"value="' + s.PoSplitId + '"  /></td>'
                            + '<td style="display:none;"><input  style="width: 120px" type="text" class="stlCodec" name="stlCode" id="PONumber' + sl.toString() + '"value="' + s.stylecode + '"  /></td>'
                            + '<td style="display:none;"><input  style="width: 120px" type="text" class="createDate" name="createDate" id="createDate' + sl.toString() + '"value="' + s.CreateDate + '"  /></td>'
                            + '<td style="display:none;"><input  style="width: 120px" type="text" class="createBy" name="createBy" id="createBy' + sl.toString() + '"value="' + s.CreateBy + '"  /></td>'
                            + '<td style="display:none;"><input  style="width: 120px" type="number" class="oType" name="ownerType" id="ownerType' + sl.toString() + '"value="' + s.PoOwnerType + '"  /></td>'

                            + '<td style=""><a href="#" onclick="ShowStlData(' + s.stylecode + ');return false;"><label name="stlNo" style="cursor:pointer">' + s.StyleNumber + ' </label></a></td>'
                            + '<td style=""><label name="ocQty" class="ocQtyc"  id = "ocQty' + sl.toString() + '"  > ' + s.POQty + ' </label ></td>'
                            + '<td style=""><label name="ShipDate"  id = "ShipDate' + sl.toString() + '"  > ' + s.ExftyNew + ' </label ></td>'

                            + '<td style=""> <label  style="width: 120px" class="alreadyKnitt" name="alreadyKnitt" id = "alreadyKnitt' + sl.toString() + '"  > ' + (parseInt(s.POQty) - parseInt(s.KnittingQty))+ ' </label ></td>'
                            //+ '<td style=""><label  style="width: 120px" class="remainingQty" name="remainingQty" id = "remainingQty' + sl.toString() + '"  > ' + s.KnittingQty + ' </label ></td>'
                            + '<td style=""><input  style="width: 70px;" type="text" class="remainingQty" id="remainingQty' + sl.toString() + '" oninput = "CalculateMachine( $(this))"  value="' + s.KnittingQty + '"     /></td>'
                            + '<td style="">  <label name="smvKn" class="smvKn" id = "smvKn' + sl.toString() + '"  > ' + s.SmvKn + ' </label ></td>'

                            + '<td style=""><input  style="width: 70px;" name="productionPeraMcn" class="productionPeraMcn" readonly type="text" id="ProdMth' + sl.toString() + '" value="' + s.ProductionPerMcn + '"     onchange = "CalLeadTime(' + sl.toString() + ')"  /></td>'
                            + '<td style=""><input type="number" style="width: 67px;" class="reqMachine" name="reqMachine"  id="reqMachine' + sl.toString() + '" value="' + s.RequiredMachine + '"     /></td>'
                            + '<td style=""><input  style="width: 70px;" class="totalProductionPerDay" readonly type="text" name="productionPerDay" id="FabIns' + sl.toString() + '"   value="' + s.productionPerDay + '"     /></td>'
                            + '<td style=""><input style="width: 120px" name="TrailDate" class="trailDate"  type="text" id="Comments' + sl.toString() + '" value="' + s.TrialDate + '"  /></td>'
                            + '<td style=""><input style="width: 120px"  name="knittStart" type="text" id="Comments' + sl.toString() + '" value="' + s.StartDate + '"  /></td>'

                            + '<td style=""><input  style="width: 70px;" class="KnittEndDate" name="KnittEnd" readonly type="text" id="PCD' + sl.toString() + '" value="' + s.EndDate + '"     /></td>'
                            + '<td style=""><input  style="width: 70px;" class="remarks" readonly type="text" name="stltype" id="PPM' + sl.toString() + '" value="' + s.Remarks + '"     /></td>'
                            + '<td style=""><input  style="width: 70px;" class="daysBeforeShipping" readonly type="text" name="dayBeforeShipping" id="PPM' + sl.toString() + '" value="' + dayBeforeShipping + '"     /></td>'
                            + '<td style=""><input type="button" value="Delete Row" onclick="DeleteRow(this)"></td>'
                            + '</tr>');
                    });
                    var totalMcn = parseInt( $('#machineQtyInfo').text());
                    $('#RemainingMachineInfo').text(totalMcn - total);
                }
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }
    function ShowStlData(stlCode) {
        alert("ok");
        }
        function daysdifference(firstDate, secondDate) {
            var startDay = new Date(firstDate);
            var endDay = new Date(secondDate);

            // Determine the time difference between two dates
            var millisBetween = startDay.getTime() - endDay.getTime();

            // Determine the number of days between two dates
            var days = millisBetween / (1000 * 3600 * 24);

            // Show the final number of days between dates
            return Math.round(Math.abs(days));
        }
    function DeleteRow(element) {
        debugger;
        var requiredMachine = parseInt( $(element).closest("tr").find('.reqMachine').val());
        var planningSlotDetId = parseInt($(element).closest("tr").find('.planningSlotDetailsId').text());
        var poSplitId = isNaN(parseInt($(element).closest("tr").find('.poSplitId').val())) ? 0 : parseInt($(element).closest("tr").find('.poSplitId').val());
        var remainingMcn = parseInt($('#RemainingMachineInfo').text());
        if (planningSlotDetId > 0) {
            $.ajax({
                type: "GET",
                url: apiHeader + 'api/CreateSlot/DeletePO/' + planningSlotDetId + '/' + poSplitId,
                contentType: "application/json;charset=utf-8",
                success: function (result) {

                    if (result == true) {
                        toastr.success(
                            'Delete SuccessFull!',
                            'Yes',
                            {
                                timeOut: 3000,
                                fadeOut: 3000,
                                onHidden: function () {
                                    //  window.location.reload();
                                    var newMcnQty = remainingMcn + requiredMachine;
                                    $('#RemainingMachineInfo').text(newMcnQty);
                                    $(element).closest("tr").remove();
                                }
                            }
                        );
                    } else {
                        toastr.warning('problems finding.');
                    }

                },

                complete: function () {
                   // window.location.href = '@Url.Action("CreateSlot", "View")';

                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        } else {
            var newMcnQty = remainingMcn + requiredMachine;
            $('#RemainingMachineInfo').text(newMcnQty);
            $(element).closest("tr").remove();
        }
    }

        function SaveData() {
            debugger;
            var dataSet = [];
            var planningSlotDetailsId, planeSlotMasterId, pOCod
                , poQty, smvKn, requiredMachine, remarks, createBy, createDate, poOnType;
            var newLeadTime = isNaN(parseInt($('#leadTiemReCal').val())) ? 0 : parseInt($('#leadTiemReCal').val());
            //if (isEdit == false) {
                $("#myTable tbody tr").each(function (index) {

                    planningSlotDetailsId = parseInt($(this).find('.planningSlotDetailsId').text());

                        planeSlotMasterId = $('#slotId').val();
                        pOCod = $(this).find('.poCodc').text();
                        poQty = $(this).find('.remainingQty').val();
                        smvKn = $(this).find('.smvKn').text();
                        requiredMachine = $(this).find('.reqMachine').val();
                        remarks = $(this).find('.remarks').val();
                        trialDate = $(this).find('.trailDate').val();
                        previousQty = $(this).find('.alreadyKnitt').text();
                        productionPerMcnQty = $(this).find('.productionPeraMcn').val();
                    productionPerDayQty = $(this).find('.totalProductionPerDay').val();
                        dayBeforeShippingqty = $(this).find('.daysBeforeShipping').val();
                    poSplitId = $(this).find('.poSplitId').val();
                    createBy = $(this).find('.createBy').val();
                    createDate = $(this).find('.createDate').val();
                    poOnType = $(this).find('.oType').val();
                   
                    dataSet.push({
                            PlanningSlotDetailsId: planningSlotDetailsId,
                            PlaneSlotMasterId: planeSlotMasterId,
                            POCod: pOCod,
                            PoQty: poQty,
                            SmvKn: smvKn,
                            RequiredMachine: requiredMachine,
                            Remarks: remarks,
                            TrialDate: trialDate,
                            PreviousQty: previousQty,
                            ProductionPerMcn: productionPerMcnQty,
                            PorductionPerDay: productionPerDayQty,
                        DaybeforeKnitt: dayBeforeShippingqty,
                        PoSplitId: poSplitId,
                        CreateBy:createBy,
                        CreateDate: createDate,
                        PoOwnType: poOnType
                        });

                });
            var isValid = true;
            $.each(dataSet, function (index, row) {
                debugger;
                if (parseInt(row.PoQty) == 0) {
                    isValid = false;
                    return false; // Break out of the loop early
                }
            });
            debugger;
            if (isValid == false) {
                toastr.warning(
                    'Any Plan Qty Is Zero.Please Check',
                    'No',
                    {
                        timeOut: 3000,
                        fadeOut: 3000,
                        onHidden: function () {
                          //  window.location.reload();
                        }
                    }
                );

                return false;
            }
            var PoData = {};
            PoData.Entity = dataSet;
            PoData.LeadTime = newLeadTime;

            var jsonStringData = JSON.stringify(dataSet);
                debugger;
            $.ajax({
                type: "POST",
                url: apiHeader + 'api/CreateSlot/SaveAllPO',
                contentType: "application/json;charset=utf-8",
                data: JSON.stringify(PoData),
                    success: function (result) {

                        if (result == true) {
                            toastr.success(
                                'Save SuccessFull!',
                                'Yes',
                                {
                                    timeOut: 3000,
                                    fadeOut: 3000,
                                    onHidden: function () {
                                        window.location.reload();
                                    }
                                }
                            );
                        } else {
                            toastr.warning('problems finding.');
                        }

                    },

                    complete: function () {
                        window.location.href = '@Url.Action("CreateSlot1", "View")';

                    },
                    error: function (errormessage) {
                        alert(errormessage.responseText);
                    }
            });

    }

    function ShowStlData(stlNo) {
        debugger
        $.ajax({
            url: apiHeader + 'view/StyleApprovalDetails/',
            type: "GET",
            dataType: "json",
            async: false,
            data: { styleNo: stlNo },
            success: function (result) {
                $('#viewStyle').modal({ backdrop: 'static', keyboard: false });
                $('#viewBody').html(result);
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }

    function ShowAll(stlNo) {
        debugger
        $.ajax({
            url: apiHeader + 'PartialView/PlanningPoView/',
            type: "GET",
            dataType: "html",
            async: false,
            data: { slotId: stlNo },
            success: function (result) {
                $('#viewStyle').modal({ backdrop: 'static', keyboard: false });
                $('#viewBody').html(result);
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }
    function StylePlanSummary() {

        var StyleNo = $('#overAllSearch').val();
        debugger
        $.ajax({
            url: apiHeader + 'PartialView/StylePlanSummary/',
            type: "GET",
            dataType: "html",
            async: false,
            data: { slotId: StyleNo },
            success: function (result) {
                $('#StyleSummaryView').modal({ backdrop: 'static', keyboard: false });
                $('#planSummaryBody').html(result);
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }


    var dataTableEvent;
    var datarow;
    var parentTableName;
        function SwappingPo(slotMasterId, number, detailsTblCount, event) {
            debugger;
            parentTableName=("#tblInitalPlanning_"+number+""+detailsTblCount);
            dataTableEvent = event;
            var btn = $(".swap_" + number + "");
            $(".allswap").hide();
            btn.show();
            var tbl = $("#InitalPlanning_" + number + "");
            var num = 1;
            var planSlotMasId = [];
             var b = num;
            var row = $(event).parent().children().index($(this));

            var data = $(event).closest("tr").clone();
            datarow = data;
            $(event).parents().find("tr").css('background-color', '#FFFFFF');
            $(event).parents("tr").css('background-color', 'green');

            event = undefined;

    }
    function SwappingDestination(number, tblNameCount, destinationSlotId) {

        var tblName = ("tblInitalPlanning_" + number + "" + tblNameCount + "");
        var data = $(dataTableEvent).closest("tr").clone();
        var data1 = datarow;
        //$("#" + tblName + " - data tbody").append(datarow.html());

        var poCod = data1.find('td:eq(0)').text();
        var poNO = data1.find('td:eq(1)').text();
        var stlNo = data1.find('td:eq(2)').text();
        var smVKn = data1.find('td:eq(3)').text();
        var reqMcn = data1.find('td:eq(4)').text();
        var remarks = data1.find('td:eq(5)').text();
        var planningSlotDetailsId = parseInt( data1.find('td:eq(13)').text());
        debugger;

        $.ajax({
            url: apiHeader + 'PartialView/SwappingPo/',
            type: "GET",
            dataType: "html",
            async: false,
            data: { destinationSltNo: destinationSlotId, SlotDetailsId: planningSlotDetailsId, numberOfMainSlot: number },
            success: function (result) {
                debugger;
                $("#" + tblName).find('tbody').append(result);
            },
            complete: function () {
                debugger;
                //$("#mytable tr td:contains('" + poCod + "')").remove();
                var nametbl = parentTableName;
                $(parentTableName + " tr td:contains(" + poCod + ")").closest("tr").remove();
                $(".swap_" + number).hide();
                var totalPoQty = 0;
                var totalMcn = 0;
                var totalDesPoQty = 0;
                var totalDesMcn = 0;
                $(parentTableName + " tbody tr").each(function (index) {
                    //var poQty = $(this).find('.remainingQty').val();
                    debugger;
                    var poQty = parseInt($(this).find('td:eq(3)').text());
                    var mcnQty = parseInt($(this).find('td:eq(6)').text());
                    totalPoQty += poQty;
                    totalMcn += mcnQty


                });
                $(parentTableName + " tfoot tr").each(function (index) {
                    debugger;
                    $(this).find('td:eq(1)').text(totalPoQty);
                    $(this).find('td:eq(3)').text(totalMcn);

                });
                $("#"+tblName + " tbody tr").each(function (index) {
                    //var poQty = $(this).find('.remainingQty').val();
                    debugger;
                    var poQty = parseInt($(this).find('td:eq(3)').text());
                    var mcnQty = parseInt($(this).find('td:eq(6)').text());
                    totalDesPoQty += poQty;
                    totalDesMcn += mcnQty


                });
                $("#"+tblName + " tfoot tr").each(function (index) {
                    debugger;
                    $(this).find('td:eq(1)').text(totalDesPoQty);
                    $(this).find('td:eq(3)').text(totalDesMcn);

                });
                var totalMcn = parseInt($("#InitalPlanninginput_" + number + "" + tblNameCount).val());
                if (totalDesMcn > totalMcn) {
                    $("#" + tblName + " tbody tr").css("background-color", "tomato");
                } else {
                    $("#" + tblName + " tbody tr").css("background-color", "white");
                }

            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
        //window.location.reload(true);
        PlanningSlotList();
    }
    function PrintAll(element) {

        var dataList = "";
        $("#InitalPlanning_" + element + " thead tr").each(function (index) {
            debugger;
            var cols = $("#InitalPlanning_" + element).find("tr:first td");
            var colCount = $("#InitalPlanning_" + element+" tr th").length;
            for (var i = 1; i <= colCount; i++) {
                if ($("#checkboxPrimary_" + element + i).is(":checked") ) {
                    debugger;
                    var planningSlotId = parseInt($("#planMasterId_" + element+ i).val());
                    if (dataList != '')
                        dataList = dataList + "," + planningSlotId;
                    else {
                        dataList = planningSlotId;
                    }
                }
            }



        });
        if (dataList == "") {
            toastr.warning('Please Select Checkbox');
            return false;
        }

        debugger
        $.ajax({
            url: apiHeader + 'PartialView/PlanningPoListView/',
            type: "GET",
            dataType: "html",
            async: false,
            data: { slotId: dataList },
            success: function (result) {
                $('#viewStyle').modal({ backdrop: 'static', keyboard: false });
                $('#viewBody').html(result);
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }

    function ExportAllData_HTML() {
        var wb = { SheetNames: [], Sheets: {} };
        var ws9 = XLSX.utils.table_to_sheet(document.getElementById('viewBody'), { raw: true });
        wb.SheetNames.push('Temp Table'); wb.Sheets["Temp Table"] = ws9;
        XLSX.writeFile(wb, "myTemp.xlsx", { cellStyles: true });
    }
        function ChangeEvent() {
        $('#newLtleble').show();
        $('#leadTiemReCal').show();


        }
        var isEdit = false;
    function ReCalLeadTime() {
        var oldSlotId = parseInt($('#slotIdInput').val());
        var newLeadTime = parseInt($('#leadTiemReCal').val());

        if (isNaN(oldSlotId) || isNaN(newLeadTime) ) {

                toastr.warning('Please Select All List Element');
        } else {
            var totalMcn = 0;
                $.ajax({
                    url: apiHeader + 'api/CreateSlot/StartDateEndDateFCNS/' + oldSlotId + '/' + newLeadTime,
                    type: "GET",
                    dataType: "json",
                    async: false,
                    success: function (result) {
                        $('#slotEndDate').val(result[0].EndDate);

                        $("#myTable tbody tr").each(function (index) {
                            debugger;
                            var poQty = $(this).find('.remainingQty').val();
                            var productionPerMcn = $(this).find('.productionPeraMcn').val();
                            var TotalProductionPerMcn = parseInt(productionPerMcn * newLeadTime);
                            var reqMcn = Math.round(parseInt(poQty) / TotalProductionPerMcn);
                            if (reqMcn == 0) {
                                reqMcn = 1;
                            }
                            var totalProductionPerDay = productionPerMcn * reqMcn;
                            $(this).find('.reqMachine').val(reqMcn);
                            $(this).find('.totalProductionPerDay').val(totalProductionPerDay);
                            $(this).find('.KnittEndDate').val(result[0].EndDate);
                            totalMcn += reqMcn;
                        });
                        isEdit = true;
                        $('#newTotalMcnLbl').text("New Allocate Machine is: "+ totalMcn);
                        $('#newTotalMcn').val(totalMcn);
                        var oldMcnQty = parseInt($('#machineQtyInfo').text());
                        if (oldMcnQty < totalMcn) {
                            $("#slotSaveBtn").prop("disabled", true);
                            $('#RemainingMachineInfo').text(0);
                            toastr.warning('Insufficient Machine Qty...!!!');
                        } else {
                            $('#RemainingMachineInfo').text(oldMcnQty - totalMcn);
                            $("#slotSaveBtn").prop("disabled", false);
                        }

                    },
                    error: function (errormessage) {
                        alert(errormessage.responseText);
                    }
                });
            }

    }

    function CalculateMachine(element) {
        debugger;
        var kntQty = $(element).closest("tr").find('.remainingQty').val();
        //var smvFKn = element.closest("tr").find("input[class=smvKn]").text();
        var productionPerMcn = $(element).closest("tr").find("input[class=productionPeraMcn]").val();
        var test = $('#leadTiemReCal').val();
        var leadTime = isNaN(parseInt($('#leadTiemReCal').val())) ? parseInt($('#ActualLeadTime').val()) : $('#leadTiemReCal').val();
       var TotalProductionPerMcn = parseInt(productionPerMcn * parseInt(leadTime));
        var reqMcn = Math.ceil(parseInt(kntQty) / TotalProductionPerMcn);
        var totalProPerMcn = reqMcn * productionPerMcn;
        $(element).closest("tr").find("input[class=reqMachine]").val(reqMcn);
        $(element).closest("tr").find("input[class=totalProductionPerDay]").val(totalProPerMcn);
        var totalMcnQty = 0;

        $("#myTable tbody tr").each(function (index) {
            debugger;

            var reqMcn = parseInt($(this).find('.reqMachine').val());

            totalMcnQty += reqMcn;
        });
        $('#newTotalMcnLbl').text("");
        $('#newTotalMcn').val(0);
        $('#newTotalMcnLbl').text("New Allocate Machine is: " + totalMcnQty);
        $('#newTotalMcn').val(totalMcnQty);
        var oldMcnQty = parseInt($('#machineQtyInfo').text());
        if (oldMcnQty < totalMcnQty) {
           // $("#slotSaveBtn").prop("disabled", true);
            toastr.warning('Insufficient Machine Qty...!!!');
        } else {
            debugger;
            var remainingQty = oldMcnQty - totalMcnQty;
            $('#RemainingMachineInfo').text(remainingQty);
            $("#slotSaveBtn").prop("disabled", false);
        }
        }
        function DeleteAll(element) {
            var dataList = "";
            $("#InitalPlanning_" + element + " thead tr").each(function (index) {

                var cols = $("#InitalPlanning_" + element).find("tr:first td");
                var colCount = $("#InitalPlanning_" + element + " tr th").length;
                for (var i = 1; i <= colCount; i++) {
                    if ($("#checkboxPrimary_" + element + i).is(":checked")) {

                        var planningSlotId = parseInt($("#planMasterId_" + element + i).val());
                        if (dataList != '')
                            dataList = dataList + "," + planningSlotId;
                        else {
                            dataList = planningSlotId;
                        }
                    }
                }
            });
            debugger;
            if (dataList == "") {
                toastr.warning('Please Select Checkbox');
                return false;
            }

            debugger
            $.ajax({
                url: apiHeader + 'api/CreateSlot/DeleteAllSlot/' + dataList,
                type: "GET",
                dataType: "json",
                async: false,
                success: function (result) {
                    if (result == true) {
                        toastr.success(
                            'Delete SuccessFull!',
                            'Yes',
                            {
                                timeOut: 3000,
                                fadeOut: 3000,
                                onHidden: function () {
                                    window.location.reload();
                                }
                            }
                        );
                    } else {
                        toastr.warning('problems finding.');
                    }
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });



        }

    function FindStyle(element) {

        debugger;


            var value = $("#" + element).val();
            //var colLength = parseInt($("#" + element + "> tbody > tr:first > td").length);
            var colLength = parseInt($("#" + element + " tr th").children().length);

            $("#" + element + " th, tr td").hide();
            var searchClm = [];
            for (var i = 1; i <= colLength; i++) {

                //$("#" + element + " tr td:nth-child(" + i + ")").hide();
                $("#" + element + i).hide();
                //$("#" + element + " td:nth-child("+i+")").css("display", "none");
                //$("#" + element + 'th:nth-child(' + i + '), tr td:nth-child(' + i + ')').hide();

                $("#tbl" + element + i + " tr").each(function (index) {

                    if (index != 0) {
                        $row = $(this);
                        var id = $row.find("td:eq(2)").text();
                        if (id.indexOf(value) != 0) {
                            $(this).hide();
                            //$(".th" + element + i).css('display','none');
                        }
                        else {
                            //$(this).show();
                            //alert(id);
                            if (jQuery.inArray(i, searchClm) === -1) {
                                searchClm.push(i);
                            }
                            $(".th" + element + i).show();

                            $("#" + element + i).show();
                            $("#" + element + i + "td").show();
                            $("#" + element + " tr td:nth-child(" + i + ")").show();
                         //   $("#" + element + 'th:nth-child(' + i + '), tr td:nth-child(' + i + ')').show();
                            var head = $("#" + element + ' th:nth-child(' + i + '), tr td:nth-child(' + i + ')').show();
                            var table = $("#tbl" + element + i + ' th, tr td').show();

                        }
                    }
                    //$(".th" + element + 1).css('display','none');
                    //$(".th" + element + 2).css('display','none');
                });

            }
            for (var j = 1; j <= colLength; j++) {
                if (jQuery.inArray(j, searchClm) === -1) {
                    $(".th" + element + j).css('display', 'none');
                }
            }
        }

    function PlanHistory(poCode) {
        var pocode = poCode;
             var urlpath = '@Url.Action("StyleHistory", "PartialView")';
            $.ajax({
                url: urlpath,
                type: "Get",
                dataType: 'html',
                async: false,
                data: { poCode: pocode },
                success: function (result) {
                    debugger;
                    $('#PlanHisModal').modal({ backdrop: 'static', keyboard: false });

                    $('#PlanHisBody').html(result);
                    
                   
                },
                
                complete: function () {
                    LoadPlanStatus("statusType");
                    $('#proposeDate').datepicker({
                        autoclose: true,
                        dateFormat: 'dd-M-yy',
                        minDate: new Date(dates)

                    });

                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
    }
    function SaveHistory() {

            var obj = {
                StyleId: parseInt($('#styleId').val()),
                PoId: parseInt($('#poId').val()),
                StatusType: $('#statusType').val(),
                CurrentStatus: $('#currentStatus').val(),
                MerchantComments: $('#merchantCommt').val(),
                PlannerProposeDate: $('#proposeDate').val(),
                FlagId: $('input[name=customRadio]:checked').val()
            };
            $.ajax({
                type: "POST",
                url: apiHeader + 'api/CreateSlot/SaveHistory',
                contentType: "application/json;charset=utf-8",
                data: JSON.stringify(obj),
                success: function (result) {

                    if (result == true) {
                        toastr.success(
                            'Save SuccessFull!',
                            'Yes',
                            {
                                timeOut: 3000,
                                fadeOut: 3000,
                                onHidden: function () {
                                    window.location.reload();
                                }
                            }
                        );
                    } else {
                        toastr.warning('problems finding.');
                    }

                },

                complete: function () {
                   // window.location.href = '@Url.Action("CreateSlot", "View")';

                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }

        function CompleteSloat(slotId) {
            debugger
            $.ajax({
                url: apiHeader + 'api/CreateSlot/CompleteSlot/' + slotId,
                type: "GET",
                dataType: "json",
                async: false,

                success: function (result) {
                    if (result == 1) {

                        PlanningSlotList();
                    }
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }

        function GetFactory(elamentName) {

            $.ajax({
                url: apiHeader + 'api/Common/GetFactory/',
                type: "GET",
                dataType: "json",
                async: false,
                success: function (result) {

                    if (result.length > 0) {
                        $('#' + elamentName + '').empty();
                        $('#' + elamentName + '').append("<option value=''>--Select Factory--</option>");
                        for (var i = 0; i < result.length; i++) {

                            $('#' + elamentName + '').append($("<option></option>").val(result[i].FactoryId).html(result[i].FactoryCode));
                        }
                    }
                },
                complete: function () {

                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });

        }
</script>
}