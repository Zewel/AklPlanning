#pragma checksum "E:\Professional\MyProjects\CoreWork\Bitbucket\BitBucketLive\SweaterPlanLive\aklplanning\Views\View\CurrentCapacityStatus.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5899e4d73e80ae408dcf420c636ea50ca0b246fc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_View_CurrentCapacityStatus), @"mvc.1.0.view", @"/Views/View/CurrentCapacityStatus.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\Professional\MyProjects\CoreWork\Bitbucket\BitBucketLive\SweaterPlanLive\aklplanning\Views\_ViewImports.cshtml"
using SweaterPlanning;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\Professional\MyProjects\CoreWork\Bitbucket\BitBucketLive\SweaterPlanLive\aklplanning\Views\_ViewImports.cshtml"
using SweaterPlanning.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5899e4d73e80ae408dcf420c636ea50ca0b246fc", @"/Views/View/CurrentCapacityStatus.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"403552f2f1d5c1e2905d5e7e2880ca8cb4e6f341", @"/Views/_ViewImports.cshtml")]
    public class Views_View_CurrentCapacityStatus : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/img/dataTableLoader.gif"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
<div class=""container-fluid"">

    <div class=""card card-primary"">
        <div class=""card-header"">
            <div class=""row"">
                <h3 class=""card-title""><span class=""fa fa-search""></span> Style-Info Search Criteria</h3>
            </div>
        </div>
        <div class=""card-body row"">


            <div class=""col-md-6"">
                <div class=""card"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">
                            <i class=""fa fa-arrow-down""></i>
                            Search Criteria
                        </h3>
                    </div>
                    <!-- /.card-header -->
                    <div class=""card-body"">
                        <div class=""row"">
                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label for=""styleNo"">Year</label>
                                    <select class=""form");
            WriteLiteral(@"-control select2"" style=""width: 100%;"" id=""dllChangeYear"">
                                    </select>
                                </div>
                            </div>
                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label for=""poNo"">Month</label>
                                    <select class=""form-control select2"" style=""width: 100%;"" id=""dllMonth"">
                                    </select>
                                </div>
                            </div>
                        </div>



                    </div>
                </div>
                <!-- /.card-body -->
            </div>

            <div class=""col-md-6"">

                <div class=""progress"">
                    <div class=""progress-bar progress-bar-striped"" role=""progressbar"" style=""width: 10%"" aria-valuenow=""10"" aria-valuemin=""0"" aria-valuemax=""100""></div>
                </div>
       ");
            WriteLiteral(@"     </div>


        </div>
        <div class=""card-footer"">
            <button type=""submit"" onclick=""LoadTableChangeYear()"" id=""processButton"" class=""float-right btn btn-primary"">Submit</button>
        </div>
    </div>

        <div class=""card card-primary"">
            <div class=""card-header"">
                <div class=""col-md-4"">
                    <h3 class=""card-title"">Qumilative Production Capacity</h3>
                </div>

            </div>

            <div class=""card-body"">
                <table id=""dailyTaskTable"" class=""table table-responsive table-bordered table-hover"">
                    <thead>
                        <tr style=""background-color:antiquewhite"">
                            <th align=""center"">Month</th>
                            <th align=""center"">Gauge</th>
                            <th>Avg. Smv</th>
                            <th>Total Capacity Minute </th>
                            <th align=""center"">Total Booked Minute</th>
    ");
            WriteLiteral(@"                        <th>Balance(Minutes)</th>
                            <th>T-Capacity Pcs</th>
                            <th>Total Booked Pcs</th>
                            <th>Balance(Pcs)</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                    <tfoot>
                        <tr>
                            <th colspan=""3"">Total</th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>

                        </tr>
                    </tfoot>
                </table>
            </div>
            <div class=""card-footer"">
            </div>
        </div>
    

</div>
<div class=""col-md-12 col-xs-12 text-center"" id=""testSpan"" st");
            WriteLiteral("yle=\"display: none\">\r\n\r\n    <span>\r\n        Please wait Data is loading -\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "5899e4d73e80ae408dcf420c636ea50ca0b246fc8070", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            WriteLiteral("    </span>\r\n\r\n</div>\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        $(function () {

            LoadYear('dllChangeYear');
            LoadMonth('dllMonth');
            $('#exportStylelList').dataTable();

        })
        function LoadYear(elementId) {
            $.ajax({
                url: apiHeader + 'api/Common/GetallYear',
                type: ""GET"",
                dataType: ""json"",
                async: false,
                success: function (result) {

                    allYears = result;
                    if (result.length > 0) {
                        $('#' + elementId + '').empty();
                        $('#' + elementId + '').append(""<option value=''>--Select Year--</option>"");
                        for (var i = 0; i < result.length; i++) {

                            $('#' + elementId + '').append($(""<option></option>"").val(result[i].YearId).html(result[i].YearName));
                        }
                    }


                },
                error: function (errormessage) {
      ");
                WriteLiteral(@"              alert(errormessage.responseText);
                }
            });

        }


        function LoadMonth(elementId) {
            $.ajax({
                url: apiHeader + 'api/Common/GetMonth',
                type: ""GET"",
                dataType: ""json"",
                async: false,
                success: function (result) {

                    allYears = result;
                    if (result.length > 0) {
                        $('#' + elementId + '').empty();
                        $('#' + elementId + '').append(""<option value=''>--Select Month--</option>"");
                        for (var i = 0; i < result.length; i++) {

                            $('#' + elementId + '').append($(""<option></option>"").val(result[i].MonthId).html(result[i].MonthNames));
                        }
                    }


                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
         ");
                WriteLiteral(@"   });

        }
        function LoadTableChangeYear() {
            debugger;

            var yearId = isNaN(parseInt($('#dllChangeYear').val())) ? parseInt(currentYear) : parseInt($('#dllChangeYear').val());
            var monthId = isNaN(parseInt($('#dllMonth').val())) ? parseInt(0) : parseInt($('#dllMonth').val());

            $('#dailyTaskTable').DataTable().clear().destroy();
            $(""tr.lvlcollapse"").off('click');

            table1 = $('#dailyTaskTable').DataTable({
                ""ajax"": { ""url"": apiHeader + ""api/CapacityProjection/YearlyRunningCapacity/"" + yearId + ""/"" + monthId , ""dataSrc"": """", ""crossDomain"": true, },
                //""buttons"": ['excel', 'pdf', 'copy'],
                // ""scrollY"": ""300px"",
                //""scrollY"": ""300px"",
                ""fixedHeader"": true,
                ""ordering"": false,
                ""lengthMenu"": [[-1], [""All""]],
                ""rowsGroup"": [0, 1, 2, 3],
                ""vertical_align"": 'middle',
              ");
                WriteLiteral(@"  ""columns"":
                    [
                        { ""data"": ""MonthNames"" },
                        { ""data"": ""GaugeDesc"" },
                        { ""data"": ""AvgSMV"" },
                        { ""data"": ""TotalCapacity"" },
                        { ""data"": ""TotalBookedMinute"" },
                        { ""data"": ""Balance"" },
                        { ""data"": ""TCapacityPcs"" },
                        { ""data"": ""TotalBookedPcs"" },
                        { ""data"": ""BalancePcs"" },
                        {
                            data: ""Percentages"",
                            render: function (data, type, row, meta) {
                                return type === 'display'
                                    ? '<progress color=""Green"" value=""' + data + '"" max= ""' + 100 + '""></progress>&nbsp;&nbsp;' + data + '%'
                                    : 100;
                            },
                        },
                    ],
                ""columnDefs"": [
         ");
                WriteLiteral(@"           //{
                    //    ""targets"": [0],
                    //    ""visible"": false,
                    //    ""searchable"": false,
                    //    ""orderable"": false
                    //},
                    { orderable: false, targets: '_all' },

                    { className: 'dt-center', targets: [1, 2, 3, 4] },

                    //, { className: ""btn"", targets: 9 },
                ],
                ""footerCallback"": function (row, data, start, end, display) {
                    var api = this.api();
                    // Remove the formatting to get integer data for summation
                    var intVal = function (i) {

                        return typeof i === 'string' ?
                            i.replace(/[\$,]/g, '') * 1 :
                            typeof i === 'number' ?
                                i : 0;

                    };


                    if (api.column(3).data().length) {
                        var pageTotal ");
                WriteLiteral(@"= api
                            .column(3, { page: 'current' })
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            })
                    }
                    else { pageTotal = 0 };


                    $(api.column(3).footer()).html(
                        pageTotal + ' minutes'
                    );
                    if (api.column(4).data().length) {
                        var pageTotal = api
                            .column(4, { page: 'current' })
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            })
                    }
                    else { pageTotal = 0 };


                    $(api.column(4).footer()).html(
                        pageTotal + ' minutes'
                    );
                    $(api.");
                WriteLiteral(@"column(5).footer()).html(
                       ''
                    );
                    
                    if (api.column(6).data().length) {
                        var pageTotal = api
                            .column(6, { page: 'current' })
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            })
                    }
                    else { pageTotal = 0 };


                    $(api.column(6).footer()).html(
                        pageTotal + ' Pcs'
                    );
                    
                    if (api.column(7).data().length) {
                        var pageTotal = api
                            .column(7, { page: 'current' })
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            })
           ");
                WriteLiteral(@"         }
                    else { pageTotal = 0 };


                    $(api.column(7).footer()).html(
                        pageTotal + ' Pcs'
                    );
                    $(api.column(8).footer()).html(
                       ' '
                    );
                    $(api.column(9).footer()).html(
                       ' '
                    );
                    
                }

            });

            $(""#dailyTaskTable"").rowspanizer({ vertical_align: 'middle' });




        }


      
      
         function GetAllStyle() {
             var YearId = $('#dllChangeYear').val();
             var MonthId = $('#dllMonth').val();


            debugger;
             var urlpath = '");
#nullable restore
#line 333 "E:\Professional\MyProjects\CoreWork\Bitbucket\BitBucketLive\SweaterPlanLive\aklplanning\Views\View\CurrentCapacityStatus.cshtml"
                       Write(Url.Action("ShipmentList", "PartialView"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';


             $.ajax({
                 type: ""GET"",
                 url: urlpath,
                 contentType: ""application/json;charset=utf-8"",
                 data: { year: YearId, monthId: MonthId},
                 dataType: ""html"",
                 beforeSend: function () {
                     $('#testSpan').show();
                     $(""#StyleListView"").empty();
                 },
                success: function (result) {

                    $(""#StyleListView"").html(result);
                    $('#testSpan').hide();

                },

                complete: function () {
                   // window.location.href = '");
#nullable restore
#line 354 "E:\Professional\MyProjects\CoreWork\Bitbucket\BitBucketLive\SweaterPlanLive\aklplanning\Views\View\CurrentCapacityStatus.cshtml"
                                         Write(Url.Action("CreateSlot", "View"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';

                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }
        function ExportAllData_HTML() {
            var wb = { SheetNames: [], Sheets: {} };
            var ws9 = XLSX.utils.table_to_sheet(document.getElementById('exportStylelList'), { raw: true });
            wb.SheetNames.push('Temp Table'); wb.Sheets[""Temp Table""] = ws9;
            XLSX.writeFile(wb, ""AllStyleList.xlsx"", { cellStyles: true });
        }


    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
