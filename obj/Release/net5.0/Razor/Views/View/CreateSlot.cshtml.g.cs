#pragma checksum "E:\Professional\MyProjects\CoreWork\Bitbucket\BitBucketLive\SweaterPlanLive\aklplanning\Views\View\CreateSlot.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b85281f8c27ae829e3efdc6d2c51f9329da7e99d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_View_CreateSlot), @"mvc.1.0.view", @"/Views/View/CreateSlot.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\Professional\MyProjects\CoreWork\Bitbucket\BitBucketLive\SweaterPlanLive\aklplanning\Views\_ViewImports.cshtml"
using SweaterPlanning;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\Professional\MyProjects\CoreWork\Bitbucket\BitBucketLive\SweaterPlanLive\aklplanning\Views\_ViewImports.cshtml"
using SweaterPlanning.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b85281f8c27ae829e3efdc6d2c51f9329da7e99d", @"/Views/View/CreateSlot.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"403552f2f1d5c1e2905d5e7e2880ca8cb4e6f341", @"/Views/_ViewImports.cshtml")]
    public class Views_View_CreateSlot : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
<div class=""container-fluid"">
    <div class=""row"">
        <div class=""col-md-12"">
            <div class=""card card-success"">
                <div class=""card-header"">
                    <div class=""row"">

                        <div class=""col-md-4"">
                            <div class=""row"">
                                <div class=""col-md-3"">
                                    <label>Planning Year</label>
                                </div>
                                <div class=""col-md-7"">
                                    <select class=""form-control select2"" style=""width: 100%;"" onchange=""PlanningSlotList()"" id=""dllYear"">
                                    </select>
                                </div>
                                <div class=""col-md-2""></div>
                            </div>
                        </div>
                        <div class=""col-md-6"">
");
            WriteLiteral("                            <h4>Aman Knittings Planning Board</h4>\r\n\r\n                        </div>\r\n                        <div class=\"col-md-2\">\r\n");
            WriteLiteral(@"                        </div>
                    </div>

                </div>
                <div class=""card-body"">
                    <div class=""col-md-12"" id=""PlanningSlotList"">

                    </div>
                </div>
            </div>
            <div class=""modal fadeInUp"" id=""modal-sm"">
                <div class=""modal-dialog modal-sm"">
                    <div class=""modal-content"">
                        <div class=""modal-header card-header"" style=""background-color:dodgerblue"">
                            <h5 class=""modal-title"" id=""headderId"">Create Planning Slot</h5>
                            <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                <span aria-hidden=""true"">&times;</span>
                            </button>
                        </div>
                        <div class=""modal-body"">
                            <div class=""col-md-12"" id=""summaryBody"">
");
            WriteLiteral(@"
                                <input type=""hidden"" id=""capacityAllocateId"" />
                                <div class=""form-group"">
                                    <label class=""control-label""> Year</label>
                                    <select name=""allocationYear"" class=""form-control select2"" style=""width: 100%;"" id=""year"" onchange=""GetFactory('factory');GetGauge('gauge');GetBrand('brand')"">
                                    </select>
                                </div>
                                <div class=""form-group"">
                                    <label class=""control-label""> Factory</label>
                                    <select name=""factoryName"" class=""form-control select2"" style=""width: 100%;"" id=""factory""");
            BeginWriteAttribute("onchange", " onchange=\"", 3495, "\"", 3506, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b85281f8c27ae829e3efdc6d2c51f9329da7e99d6729", async() => {
                WriteLiteral("--Select Month--");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                    </select>
                                </div>
                                <div class=""form-group"">
                                    <label class=""control-label"">Brand</label>
                                    <select class=""form-control select2"" style=""width: 100%;"" id=""brand""");
            BeginWriteAttribute("onchange", " onchange=\"", 3923, "\"", 3934, 0);
            EndWriteAttribute();
            WriteLiteral(@">
                                    </select>
                                </div>
                                <div class=""form-group"">
                                    <label class=""control-label"">Gauge</label>
                                    <select class=""form-control select2"" style=""width: 100%;"" id=""gauge""");
            BeginWriteAttribute("onchange", " onchange=\"", 4267, "\"", 4278, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b85281f8c27ae829e3efdc6d2c51f9329da7e99d8920", async() => {
                WriteLiteral("--Select Gauge--");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                    </select>
                                </div>
                                <div class=""form-group"">
                                    <label for=""txtOrderDate"">Lead Time</label>
                                    <input type='text' name=""leadTime"" class=""form-control"" id='leadTime' oninput=""GetSlotDate()"" required />
                                </div>
                                <div class=""form-group"">
                                    <div class=""form-check"">
                                        <input type=""checkbox"" class=""form-check-input"" id=""manualFromDate"" onclick=""GetStatDateReCalculate()"">
                                        <label class=""form-check-label"" for=""manualFromDate"" style=""color:red"">Manually Given Start Date</label>
                                    </div>
                                </div>

                                <div class=""form-group"">
                                    <label id=""LastDateLab");
            WriteLiteral(@"el"" style=""color:red""></label>
                                </div>
                                <div class=""form-group"">
                                    <label for=""txtOrderDate"">Start Date</label>
                                    <input type='text' class=""form-control"" id='startDate' onchange=""CalculateDate()"" />
                                </div>
                                <div class=""form-group"">
                                    <label for=""txtOrderDate"">End Date</label>
                                    <input type='text' class=""form-control datepicker"" id='endDate' />
                                    <label id=""machineQty"" style=""color:red""></label>
                                    <input type=""hidden"" id=""McnQty"" />
                                </div>

                            </div>
                        </div>
                        <div class=""modal-footer justify-content-between"">
                            <button type=""button"" class=""btn b");
            WriteLiteral("tn-outline-dark\" data-dismiss=\"modal\">Close</button>\r\n                            <button type=\"submit\" class=\"btn btn-info\" onclick=\"SaveCreateSlot()\">Save</button>\r\n");
            WriteLiteral(@"                        </div>
                    </div>
                    <!-- /.modal-content -->
                </div>
                <!-- /.modal-dialog -->
            </div>

            <div class=""modal fadeInUp"" id=""viewStyle"">
                <div class=""modal-dialog modal-xl"">
                    <div class=""modal-content"">
                        <div class=""modal-header card-header"" style=""background-color:dodgerblue"">
                            <h5 class=""modal-title"" id=""headderId"">Planning PO List</h5>
                            <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                <span aria-hidden=""true"">&times;</span>
                            </button>
                        </div>
                        <div class=""modal-body"">
                            <div class=""col-md-12 table-responsive"" id=""viewBody"">
                            </div>
                        </div>
                        <div c");
            WriteLiteral(@"lass=""modal-footer justify-content-between"">
                            <button type=""button"" class=""btn btn-outline-dark"" data-dismiss=""modal"">Close</button>
                            <button type=""button"" class=""btn btn-outline-dark float-right"" onclick=""ExportAllData_HTML()"">Print Excel</button>

                        </div>
                    </div>
                    <!-- /.modal-content -->
                </div>
                <!-- /.modal-dialog -->
            </div>

            <div class=""modal fadeInUp"" id=""StyleModal"">
                <div class=""modal-dialog modal-xl"">
                    <div class=""modal-content"">
                        <div class=""modal-header card-header"" style=""background-color:dodgerblue"">
");
            WriteLiteral(@"                            <div class=""col-md-4"">
                                <h5 class=""modal-title"" id=""headderId""><span class=""fa fa-list""></span> Add Po In Planning Slot</h5>
                            </div>
                            <div class=""col-md-2"">
                                <label id=""factoryInfo"" style=""color:white""></label>
                            </div>

                            <div class=""col-md-1"">
                                <label id=""leadTimeInfo"" style=""color:white""></label>
                            </div>
                            <div class=""col-md-1"">
                                <label id=""MachineLabel"" style=""color:white""></label>
                                <input type=""hidden"" id=""slotId"" />
                            </div>
                            <div class=""col-md-1"">
                                <label id=""machineQtyInfo"" style=""color:white""></label>
                            </div>
                            <d");
            WriteLiteral("iv class=\"col-md-2\">\r\n                                <label id=\"RemainingMachineInfo\" style=\"color:red\"></label>\r\n                                \r\n                                <a");
            BeginWriteAttribute("href", " href=\"", 9707, "\"", 9714, 0);
            EndWriteAttribute();
            WriteLiteral(@" style=""float:right; color:white;"">Change Lead Time</a>
                            </div>
                            <div class=""col-md-1"">

                                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                    <span aria-hidden=""true"">&times;</span>
                                </button>
                            </div>
");
            WriteLiteral(@"
                        </div>
                        <div class=""modal-body card-body"">
                            <div class=""card-body"" style=""padding:0px 0px 4px 0px"">
                                <div class=""col-md-4"">
                                    <div class=""form-group"">
                                        <label for=""txtOrderDate"">New Lead Time</label>
                                        <input type='number' class=""form-control"" id='leadTiemReCal' oninput=""ReCalLeadTime()"" required />
                                    </div>
                                </div>
                            </div>
                            <div class=""row"">
                                <table id=""myTable"" class=""table table-bordered table-responsive"">
                                    <thead>
                                        <tr style=""background-color: aliceblue"">
                                            <th>PO NO<span style=""color:red;font-weight:bold""> *</span><");
            WriteLiteral(@"/th>
                                            <th>Style<span style=""color:red;font-weight:bold""> *</span></th>
                                            <th>Order Qty</th>
                                            <th>Actual Ship Date</th>
                                            <th>Already Knittings</th>
                                            <th>Remaining Knittings</th>
                                            <th>Jac Time</th>
                                            <th>Knitting Pro./Mc.</th>
                                            <th>Req. Machine</th>
                                            <th>Production/Day</th>
                                            <th>Trial Strat Date</th>
                                            <th>Knitting Start Date</th>
                                            <th>Knitting End Date</th>
                                            <th>Remarks</th>
                                            <th>Day Before Shipping</th>
   ");
            WriteLiteral(@"                                         <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody id=""poList""></tbody>
                                    <tfoot>
                                        <tr id=""trallocationListTable"" style=""background-color:khaki"">

                                            <td>

                                                <select class=""form-control select2"" style=""width: 100%;"" id=""dllPo"" onchange=""GetStyleInfo()"">
                                                </select>
                                                <input type=""hidden"" id=""slotId"" />


                                            </td>
                                            <td>

                                                <input type=""text"" class=""form-control"" id=""StyleName"" />
                                                <input type=""hidden"" id=""StlNo"" />
                  ");
            WriteLiteral("                          </td>\r\n                                            <td>\r\n\r\n                                                <input type=\"number\" class=\"form-control\" id=\"orderQty\"");
            BeginWriteAttribute("oninput", " oninput=\"", 13428, "\"", 13438, 0);
            EndWriteAttribute();
            WriteLiteral(@" />

                                            </td>
                                            <td>

                                                <input type=""text"" class=""form-control"" id=""shipDate"" />

                                            </td>
                                            <td>

                                                <input type=""text"" class=""form-control"" id=""AlreadyKnitt"" />

                                            </td>
                                            <td>

                                                <input type=""text"" class=""form-control"" id=""RemainingQty"" />

                                            </td>
                                            <td>

                                                <input type=""text"" class=""form-control"" id=""Jactime"" />

                                            </td>
                                            <td>

                                                <input type=""te");
            WriteLiteral(@"xt"" class=""form-control"" id=""ProductionPerMachine"" />

                                            </td>

                                            <td>

                                                <input type=""text"" class=""form-control"" id=""ReqMachine"" />

                                            </td>
                                            <td>

                                                <input type=""text"" class=""form-control"" id=""ProdutionPerDay"" />

                                            </td>
                                            <td>

                                                <input type=""text"" class=""form-control datepicker"" id=""Traildate"" />

                                            </td>
                                            <td>

                                                <input type=""text"" class=""form-control"" id=""KnittingStart"" />

                                            </td>
                                            ");
            WriteLiteral(@"<td>

                                                <input type=""text"" class=""form-control"" id=""KnittingEnd"" />

                                            </td>
                                            <td>

                                                <input type=""text"" class=""form-control"" id=""txtRemarks"" />

                                            </td>
                                            <td>
");
            WriteLiteral(@"                                                <button type=""button"" id=""btnAddNewItem"" class=""btn btn-success"" onclick=""AddRow()""> <span class=""fa fa-plus"" /> </button>
                                            </td>
                                        </tr>
                                    </tfoot>
                                </table>

                            </div>
                            
                         </div>
                        <div class=""modal-footer justify-content-between"">
                            <button type=""button"" class=""btn btn-outline-dark"" data-dismiss=""modal"">Close</button>
                            <button type=""submit"" class=""btn btn-info"" onclick=""SaveData()"">Save</button>
");
            WriteLiteral("                        </div>\r\n                    </div>\r\n                    <!-- /.modal-content -->\r\n                </div>\r\n                <!-- /.modal-dialog -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n");
#nullable restore
#line 317 "E:\Professional\MyProjects\CoreWork\Bitbucket\BitBucketLive\SweaterPlanLive\aklplanning\Views\View\CreateSlot.cshtml"
      await Html.RenderPartialAsync("_ValidationScriptsPartial");

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
<script>

        $(function () {

            //$('#datetimepicker1').datetimepicker();
            //$('#reservationdate').datetimepicker({
            //    format: 'L'
            //});
            $(document).on(""click"", "".details-control"", function (e) {
                $(this).closest('tr').toggleClass('expand').nextUntil('tr.header').slideToggle(100);
            });
            GetAllocationYear('year');
            LoadYear('dllYear');
            $('#createSlot').validate({ // initialize the plugin
                rules: {
                    allocationYear: {
                        required: true
                    },
                    factoryName: {
                        required: true
                    }
                }
            });

            $('#InitalPlanning').dataTable({
                ""bPaginate"": false,
            });

            $('#startDate').attr(""disabled"", true);
            $('#endDate').attr(""disabled"", true);
        });
        ");
                WriteLiteral(@"function LoadYear(elementId) {
            $.ajax({
                url: apiHeader + 'api/Common/GetAllocateYear',
                type: ""GET"",
                dataType: ""json"",
                async: false,
                success: function (result) {

                    if (result.length > 0) {
                        $('#' + elementId + '').empty();
                        for (var i = 0; i < result.length; i++) {

                            $('#' + elementId + '').append($(""<option></option>"").val(result[i].YearId).html(result[i].YearName));
                        }
                    }

                    $('#dllYear').val(currentYear).trigger('change');

                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });

        }


        function GetFactory(elamentName) {

            var yearId = parseInt($('#year').val());
            $.ajax({
                url: apiHeader +");
                WriteLiteral(@" 'api/Common/GetAllMachineQty/' + yearId,
                type: ""GET"",
                dataType: ""json"",
                async: false,
                success: function (result) {

                    allYears = result
                    const key = 'ShortForm';
                    const FactoryResult = [...new Map(result.map(item =>
                        [item[key], item])).values()];
                    if (result.length > 0) {
                        $('#' + elamentName + '').empty();
                        $('#' + elamentName + '').append(""<option value=''>--Select Factory--</option>"");
                        for (var i = 0; i < FactoryResult.length; i++) {

                            $('#' + elamentName + '').append($(""<option></option>"").val(FactoryResult[i].FactoryId).html(FactoryResult[i].ShortForm));
                        }
                    }
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
      ");
                WriteLiteral(@"          }
            });

        }
        function GetGauge(elamentName) {

            var yearId = parseInt($('#year').val());
            $.ajax({
                url: apiHeader + 'api/Common/GetAllMachineQty/' + yearId,
                type: ""GET"",
                dataType: ""json"",
                async: false,
                success: function (result) {

                    allYears = result
                    const key = 'GaugeId';
                    const FactoryResult = [...new Map(result.map(item =>
                        [item[key], item])).values()].sort();
                    if (result.length > 0) {
                        $('#' + elamentName + '').empty();
                        $('#' + elamentName + '').append(""<option value=''>--Select Gauge--</option>"");
                        for (var i = 0; i < FactoryResult.length; i++) {

                            $('#' + elamentName + '').append($(""<option></option>"").val(FactoryResult[i].GaugeId).html(FactoryResult[i]");
                WriteLiteral(@".GaugeDesc));
                        }
                    }
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });

    }
    function GetBrand(elamentName) {

            var yearId = parseInt($('#year').val());
            $.ajax({
                url: apiHeader + 'api/Common/GetAllMachineQty/' + yearId,
                type: ""GET"",
                dataType: ""json"",
                async: false,
                success: function (result) {

                    allYears = result
                    const key = 'BrandId';
                    const FactoryResult = [...new Map(result.map(item =>
                        [item[key], item])).values()].sort();
                    if (result.length > 0) {
                        $('#' + elamentName + '').empty();
                        $('#' + elamentName + '').append(""<option value=''>--Select Brand--</option>"");
                       ");
                WriteLiteral(@" for (var i = 0; i < FactoryResult.length; i++) {

                            $('#' + elamentName + '').append($(""<option></option>"").val(FactoryResult[i].BrandId).html(FactoryResult[i].McnType));
                        }
                    }
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });

        }
        function GetSlotDate() {

            var yearId = parseInt($('#year').val());
            var factoryId = parseInt($('#factory').val());
            var brandId = parseInt($('#brand').val());
            var gaugeId = parseInt($('#gauge').val());
            var leadTime = parseInt($('#leadTime').val());
            if (isNaN(yearId) || isNaN(factoryId) || isNaN(gaugeId) || isNaN(leadTime)) {

                toastr.warning('Please Select All List Element');
            } else {
                $.ajax({
                    url: apiHeader + 'api/CreateSlot/StartDateEndDate");
                WriteLiteral(@"/' + yearId + '/' + factoryId + '/' + brandId + '/' + gaugeId + '/' + leadTime,
                    type: ""GET"",
                    dataType: ""json"",
                    async: false,
                    success: function (result) {

                        $('#startDate').val(result[0].StartDate);
                        $('#endDate').val(result[0].EndDate);
                        $('#McnQty').val(result[0].TotalMachineQty);
                        $('#machineQty').html(""Total Machine Qty is:"" + result[0].TotalMachineQty);

                    },
                    error: function (errormessage) {
                        alert(errormessage.responseText);
                    }
                });
            }

        }

    function GetStatDateReCalculate() {

        if ($('#manualFromDate').prop(""checked"") == true) {

            var yearId = parseInt($('#year').val());
            var factoryId = parseInt($('#factory').val());
            var brandId = parseInt($('#brand').va");
                WriteLiteral(@"l());
            var gaugeId = parseInt($('#gauge').val());
            if (isNaN(yearId) || isNaN(factoryId) || isNaN(gaugeId)) {

                toastr.warning('Please Select All List Element');
            } else {
                $.ajax({
                    url: apiHeader + 'api/CreateSlot/GetLastDateForPlanning/' + yearId + '/' + factoryId + '/' + brandId + '/' + gaugeId,
                    type: ""GET"",
                    dataType: ""json"",
                    async: false,
                    success: function (result) {


                        $('#startDate').attr(""disabled"", false);
                        $('#startDate').val("""");
                        alert(result[0].LastDate);
                       // $('#startDate').attr('min', result[0].LastDate);
                        //('#startDate').datepicker({
                        //    ""minDate"": '0'
                        //});
                        $('#LastDateLabel').text(""Last Planning Slot Date Is: "" + result[0].Las");
                WriteLiteral(@"tDate);
                        var dates = result[0].LastDate;
                        $('#startDate').datepicker({
                            autoclose: true,
                            dateFormat: 'dd-M-yy',
                            minDate: new Date(dates)

                        });
                    },
                    error: function (errormessage) {
                        alert(errormessage.responseText);
                    }
                });
            }

        } else {
            $('#startDate').val("""");
            $('#startDate').attr(""disabled"", true);
            GetSlotDate();
        }
    }

        function CalculateDate() {

            var previousDate = $(""#LastDateLabel"").text();
            var date =$(""#startDate"").val();
            var leadTime = $(""#leadTime"").val();
            if (new Date(date) <= new Date(previousDate)) {
                toastr.warning(""Please Input Valid Date"");
                $(""#startDate"").val("""");
         ");
                WriteLiteral(@"       $(""#endDate"").val("""");
                return;
            } else {
                $.ajax({
                    url: apiHeader + 'api/CreateSlot/CalculateLastDateForPlanning/' + date + '/' + leadTime,
                    type: ""GET"",
                    dataType: ""json"",
                    async: false,
                    success: function (result) {


                        $('#startDate').attr(""disabled"", false);
                        $('#endDate').val(result[0].EndDate);

                    },
                    error: function (errormessage) {
                        alert(errormessage.responseText);
                    }
                });
            }
        }
        function SaveCreateSlot() {

            var obj = {
                YearId: parseInt($('#year').val()),
                FactoryId: parseInt($('#factory').val()),
                BrandId: parseInt($('#brand').val()),
                GaugeId: parseInt($('#gauge').val()),
                LeadTime");
                WriteLiteral(@": parseInt($('#leadTime').val()),
                StartDate:$('#startDate').val(),
                EndDate: $('#endDate').val(),
                StageId :1,
                NoOfMachine: parseInt($('#McnQty').val())
            };
            $.ajax({
                type: ""POST"",
                url: apiHeader + 'api/CreateSlot/SaveSlot',
                contentType: ""application/json;charset=utf-8"",
                data: JSON.stringify(obj),
                success: function (result) {

                    if (result == true) {
                        toastr.success(
                            'Save SuccessFull!',
                            'Yes',
                            {
                                timeOut: 3000,
                                fadeOut: 3000,
                                onHidden: function () {
                                    window.location.reload();
                                }
                            }
                        );
       ");
                WriteLiteral("             } else {\r\n                        toastr.warning(\'problems finding.\');\r\n                    }\r\n\r\n                },\r\n\r\n                complete: function () {\r\n                   // window.location.href = \'");
#nullable restore
#line 613 "E:\Professional\MyProjects\CoreWork\Bitbucket\BitBucketLive\SweaterPlanLive\aklplanning\Views\View\CreateSlot.cshtml"
                                         Write(Url.Action("CreateSlot", "View"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';

                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }

        function PlanningSlotList() {
             var year = $('#dllYear').val();

             var urlpath = '");
#nullable restore
#line 625 "E:\Professional\MyProjects\CoreWork\Bitbucket\BitBucketLive\SweaterPlanLive\aklplanning\Views\View\CreateSlot.cshtml"
                       Write(Url.Action("PlanningSlotPartial", "PartialView"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';
            $.ajax({
                url: urlpath,
                dataType: 'html',
                type: ""Get"",
                data: { yearId:year},
                async: false,
                success: function (data) {


                    $(""#PlanningSlotList"").html("""");
                    $(""#PlanningSlotList"").html(data);
                    $("".details-control"").trigger(""click"");
                }
                //,
                //complete: function () {
                //    var groupColumn = 15;
                //    for (let i = 1; i <= 7; i++) {

                //        var table = $('#InitalPlanning_' + i).DataTable({
                //            ""columnDefs"": [
                //                { ""visible"": false, ""targets"": groupColumn }
                //            ],
                //            ""order"": [[groupColumn, 'asc']],
                //            ""displayLength"": -1,
                //            ""paging"": false,
                //         ");
                WriteLiteral(@"   ""fixedHeader"": true,
                //            ""drawCallback"": function (settings) {
                //                var api = this.api();
                //                var rows = api.rows({ page: 'current' }).nodes();
                //                var last = null;

                //                api.column(groupColumn, { page: 'current' }).data().each(function (group, i) {
                //                    if (last !== group) {
                //                        $(rows).eq(i).before(
                //                            '<tr class=""group""><td colspan=""14""   style=""float:left"">' + group + '</td></tr>'
                //                        );

                //                        last = group;
                //                    }
                //                });
                //            }
                //        });
                //    }

                //}
            });
        }
        var leadTime = 0;
    function ");
                WriteLiteral(@"AddStyle(element) {

        //$('#StyleModal').modal();
        //$('#StyleModal').html("""");
        $('#StyleModal').modal({ backdrop: 'static', keyboard: false })
        currentMachine = $('#machineQtyInfo').text();
        $.ajax({
            url: apiHeader + 'api/CreateSlot/GetSlotInfo/' + element,
            type: ""GET"",
            dataType: ""json"",
            async: false,
            success: function (result) {

                $('#factoryInfo').text(result[0].YearName + "" "" + result[0].ShortForm + "" "" + result[0].McnType + "" "" + result[0].GaugeDesc + "" "");
                $('#leadTimeInfo').text(""Lead Time: "" + result[0].LeadTime);
                $('#MachineLabel').text(""Total Machine: "");
                $('#slotId').val(element);
                $('#machineQtyInfo').text(result[0].NoOfMachine);
                leadTime = result[0].LeadTime;

            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
    ");
                WriteLiteral(@"    });
        LoadPoNo(element);
        AddPreviousStyle($('#slotId').val());
    }
    function RemoveRow(trId) {
        if (($('#myTable tbody tr').length) > 1) {
            $('#tr_' + trId + '').remove();
        }

    }
    /////////////////////////////////////////////

    function LoadPoNo(SlotId) {
        $('#dllPo').empty();
        debugger;
        $.ajax({
            url: apiHeader + 'api/CreateSlot/GetAllPoForActualPlanning/' + SlotId,
            type: ""GET"",
            dataType: ""json"",
            async: false,
            success: function (result) {

                if (result.length > 0) {
                    $('#dllPo').empty();
                    $('#dllPo').append(""<option value=''>--Select PO No--</option>"");
                    for (var i = 0; i < result.length; i++) {

                        $('#dllPo').append($(""<option></option>"").val(result[i].POCod).html(result[i].PONo));
                    }
                }
                $('#slotId').v");
                WriteLiteral(@"al(SlotId);

            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });

        }

        function GetStyleInfo() {

            var poId = $(""#dllPo"").val();
            if (poId > 0) {
                $.ajax({
                    url: apiHeader + 'api/CreateSlot/GetPoDetails/' + poId,
                    type: ""GET"",
                    dataType: ""json"",
                    async: false,
                    success: function (result) {
                        debugger;
                        $(""#StyleName"").val(result[0].StyleNumber);
                        $(""#StlNo"").val(result[0].stylecode);
                        $(""#orderQty"").val(result[0].POQty);
                        $(""#shipDate"").val(result[0].ExftyNew);
                        $(""#AlreadyKnitt"").val(result[0].AlreadyKnittingsQty);
                        $(""#RemainingQty"").val(result[0].RemainingQty);
                        $(""#Jactime""");
                WriteLiteral(@").val(result[0].SmvKn);
                        $(""#txtRemarks"").val(result[0].CriticalType);
                        CalculationForMachine(parseInt(result[0].SmvKn), parseInt(result[0].RemainingQty));
                    },
                    error: function (errormessage) {
                        alert(errormessage.responseText);
                    }
                });
            }
            else {
                $('#Traildate').val("""");
                $('#stylecode').val("""");
                $('#StyleName').val("""");
                $('#orderQty').val("""");
                $('#shipDate').val("""");
                $('#AlreadyKnitt').val("""");
                $('#RemainingQty').val("""");
                $('#Jactime').val("""");
                $('#txtRemarks').val("""");
                $('#ProductionPerMachine').val("""");
                $('#ReqMachine').val("""");
                $('#ProdutionPerDay').val("""");
                $('#KnittingStart').val("""");
                $('#KnittingEnd'");
                WriteLiteral(@").val("""");
            }
        }

        function CalculationForMachine( smv,ocQty) {
            var slotId = $('#slotId').val();

            $.ajax({
                url: apiHeader + 'api/CreateSlot/GetSlotDetailsForCalCuMcn/' + slotId,
                type: ""GET"",
                dataType: ""json"",
                async: false,
                success: function (result) {
                    debugger;
                    var productionPerMcn = parseInt(parseInt(result[0].DailyWorkMunit) / parseInt(smv));
                    var TotalProductionPerMcn = parseInt(productionPerMcn * parseInt(result[0].LeadTime));
                    var reqMcn = Math.ceil(parseInt(ocQty) / TotalProductionPerMcn);
                    $(""#ProductionPerMachine"").val(productionPerMcn);
                    $(""#ReqMachine"").val(reqMcn);
                    $(""#ProdutionPerDay"").val(productionPerMcn * reqMcn);
                    //$(""#Traildate"").val();
                    $(""#KnittingStart"").val(result[0].St");
                WriteLiteral(@"artDate);
                    $(""#KnittingEnd"").val(result[0].EndDate);
                    var trlDate = new Date(new Date(result[0].StartDate) - 5 * 24 * 60 * 60 * 1000);
                    $(""#Traildate"").val(moment(trlDate).format('DD MMM YYYY'));
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
    }
    var currentMachine = 0;
    function AddRow() {

        var totalMachine = $('#machineQtyInfo').text();
        var poCode = $(""#dllPo"").val();
        var poNo = $(""#dllPo option:selected"").text();
        if (poCode == null || poCode < 0 || poCode == """") {
            alert(""--Please Select PoNO--"");
            return;
        }
        var TrailDate = $('#Traildate').val();
        if (TrailDate == null || TrailDate < 0 || TrailDate == """") {
            alert(""--Please Select TrialDate--"");
            return;
        }
        var rowCount = parseInt($('#myTable tbody");
                WriteLiteral(@" tr').length);
        if (rowCount == 0) {
            currentMachine = parseInt(totalMachine);
        } else {
            currentMachine = parseInt($('#RemainingMachineInfo').text());
        }
        var stlCode = $('#StlNo').val();
        var style = $('#StyleName').val();
        var ocQty = $('#orderQty').val();
        var shipDate = $('#shipDate').val();
        var alreadyKnitt = $('#AlreadyKnitt').val();
        var remainingQty = $('#RemainingQty').val();
        var smvKn = $('#Jactime').val();
        var stltype = $('#txtRemarks').val();
        var productionPeraMcn = $('#ProductionPerMachine').val();
        var reqMcn = $('#ReqMachine').val();
        var productionPerDay = $('#ProdutionPerDay').val();
        var knittStart = $('#KnittingStart').val();
        var KnittEnd = $('#KnittingEnd').val();
        var trlDate = new Date(new Date(startDate) - 5 * 24 * 60 * 60 * 1000);
        var dayBeforeShipping = daysdifference(new Date(KnittEnd), new Date(shipDate));
   ");
                WriteLiteral(@"     if (currentMachine > 0) {
            if (reqMcn > currentMachine) {
                reqMcn = currentMachine
                productionPerDay = reqMcn * productionPeraMcn
                remainingQty = parseInt(parseInt(productionPerDay) * leadTime);
            }
            var rowCountItem = parseInt($('#myTable tbody tr').length);
            var sl = rowCountItem + 1;
            var dtThreadPositionSize = $('#myTable');
            var tableBodyThreadPositionSize = dtThreadPositionSize.find('tbody');
            //tableBody.empty();

            tableBodyThreadPositionSize.append('<tr id=""tr_' + sl + '"">'
                + '<td style=""display:none;"">  <label  style=""width: 150px"" class=""planningSlotDetailsId"" name=""planningSlotDetailsId"" id = ""planningSlotDetailsId' + sl.toString() + '""  > ' + 0 + ' </label ></td>'
                + '<td style=""display:none;"">  <label  style=""width: 150px"" class=""poCodc"" name=""poCod"" id = ""poCod' + sl.toString() + '""  > ' + poCode + ' </label ></td>'");
                WriteLiteral(@"
                + '<td >  <label  style=""width: 120px"" name=""poNO"" id = ""poNO' + sl.toString() + '""  > ' + poNo + ' </label ></td>'
                + '<td style=""display:none;""><input  style=""width: 120px"" type=""text"" class=""stlCodec"" name=""stlCode"" id=""PONumber' + sl.toString() + '""value=""' + stlCode + '""  /></td>'
                + '<td style=""""><a href=""#"" onclick=""ShowStlData(' + stlCode + ');return false;""><label name=""stlNo"" style=""cursor:pointer"">' + style + ' </label></a></td>'
                + '<td style=""""><label name=""ocQty"" class=""ocQtyc""  id = ""ocQty' + sl.toString() + '""  > ' + ocQty + ' </label ></td>'
                + '<td style=""""><label style=""width: 120px"" name=""ShipDate""  id = ""ShipDate' + sl.toString() + '""  > ' + shipDate + ' </label ></td>'

                + '<td style=""""> <label  style=""width: 60px"" class=""alreadyKnitt"" name=""alreadyKnitt"" id = ""alreadyKnitt' + sl.toString() + '""  > ' + alreadyKnitt + ' </label ></td>'
                + '<td style=""""><input  style=""width: 70");
                WriteLiteral(@"px;"" type=""text"" class=""remainingQty"" id=""remaining' + sl.toString() + '"" onchange = ""CalculateMachine(' + sl.toString() + ')""  value=""' + remainingQty + '""     /></td>'
                + '<td style="""">  <label name=""smvKn"" class=""smvKn"" id = ""smvKn' + sl.toString() + '""  > ' + smvKn + ' </label ></td>'

                + '<td style=""""><input  style=""width: 70px;"" name=""productionPeraMcn"" class=""productionPeraMcn"" readonly type=""text"" id=""ProdMth' + sl.toString() + '"" value=""' + productionPeraMcn + '""     onchange = ""CalLeadTime(' + sl.toString() + ')""  /></td>'
                + '<td style=""""><input type=""number"" style=""width: 67px;"" class=""reqMachine"" name=""reqMachine""  id=""reqMachine' + sl.toString() + '"" value=""' + reqMcn + '""     /></td>'
                + '<td style=""""><input  style=""width: 70px;"" class=""productionPerDay"" readonly type=""text"" name=""productionPerDay"" id=""FabIns' + sl.toString() + '""   value=""' + productionPerDay + '""     /></td>'
                + '<td style=""""><input style=""width:");
                WriteLiteral(@" 120px"" class=""trailDate"" name=""TrailDate""  type=""text"" id=""Comments' + sl.toString() + '"" value=""' + TrailDate + '""  /></td>'
                + '<td style=""""><input style=""width: 120px""  name=""knittStart"" type=""text"" id=""Comments' + sl.toString() + '"" value=""' + knittStart + '""  /></td>'

                + '<td style=""""><input  style=""width: 70px;"" class=""date_Picker"" name=""KnittEnd"" readonly type=""text"" id=""PCD' + sl.toString() + '"" value=""' + KnittEnd + '""     /></td>'
                + '<td style=""""><input  style=""width: 70px;"" class=""remarks"" readonly type=""text"" name=""stltype"" id=""PPM' + sl.toString() + '"" value=""' + stltype + '""     /></td>'
                + '<td style=""""><input  style=""width: 70px;"" class=""daysBeforeShipping"" readonly type=""text"" name=""dayBeforeShipping"" id=""PPM' + sl.toString() + '"" value=""' + dayBeforeShipping + '""     /></td>'
                + '<td style=""""><input type=""button"" value=""Delete Row"" onclick=""DeleteRow(this)""></td>'
                + '</tr>');
            $(""");
                WriteLiteral(@"#dllPo"").val("""").trigger(""change"");
            $('#Traildate').val("""");
            $('#stylecode').val("""");
            $('#StyleName').val("""");
            $('#orderQty').val("""");
            $('#shipDate').val("""");
            $('#AlreadyKnitt').val("""");
            $('#RemainingQty').val("""");
            $('#Jactime').val("""");
            $('#txtRemarks').val("""");
            $('#ProductionPerMachine').val("""");
            $('#ReqMachine').val("""");
            $('#ProdutionPerDay').val("""");
            $('#KnittingStart').val("""");
            $('#KnittingEnd').val("""");

            var total = 0;
            $('#myTable tbody tr').each(function (i) {
                //var value = parseInt($('#reqMachine' + i).val());
                var value = parseInt($(this).find('.reqMachine').val());
                if (!isNaN(value)) {
                    total += value;
                }
            });
            debugger;
            $('#RemainingMachineInfo').text(totalMachine - total)");
                WriteLiteral(@";
            currentMachine = totalMachine - total;
        }
        else {
            toastr.warning('No Machine Are Available');
        }
    }


    function AddPreviousStyle(slotId) {
        debugger;
        var slotId = slotId;

        $.ajax({
            url: apiHeader + 'api/CreateSlot/GetSlotDetails/' + slotId,
            type: ""GET"",
            dataType: ""json"",
            async: false,
            success: function (result) {
                $(""#poList"").empty();
                if (result.length > 0) {
                    var rowCountItem = parseInt($('#myTable tbody tr').length);
                    var sl = rowCountItem + 1;
                    var dtThreadPositionSize = $('#myTable');
                    var tableBodyThreadPositionSize = dtThreadPositionSize.find('tbody');
                    //tableBody.empty();
                    var total = 0;
                    $.each(result, function (index, s) {

                        total += s.RequiredMachine;");
                WriteLiteral(@"


                        var dayBeforeShipping = daysdifference(new Date(s.ExftyNew), new Date(s.EndDate));

                        tableBodyThreadPositionSize.append('<tr id=""tr_' + sl + '"" style=""background-color:Orange"" >'
                            + '<td style=""display:none;"">  <label  style=""width: 150px"" class=""planningSlotDetailsId"" name=""planningSlotDetailsId"" id = ""planningSlotDetailsId' + sl.toString() + '""  > ' + s.PlanningSlotDetailsId + ' </label ></td>'
                            + '<td style=""display:none;"">  <label  style=""width: 150px"" class=""poCodc"" name=""poCod"" id = ""poCod' + sl.toString() + '""  > ' + s.POCod + ' </label ></td>'
                            + '<td >  <label  style=""width: 120px"" name=""poNO"" id = ""poNO' + sl.toString() + '""  > ' + s.PONo + ' </label ></td>'
                            + '<td style=""display:none;""><input  style=""width: 120px"" type=""text"" class=""stlCodec"" name=""stlCode"" id=""PONumber' + sl.toString() + '""value=""' + s.stylecode + '""  /></td>'
     ");
                WriteLiteral(@"                       + '<td style=""""><a href=""#"" onclick=""ShowStlData(' + s.stylecode + ');return false;""><label name=""stlNo"" style=""cursor:pointer"">' + s.StyleNumber + ' </label></a></td>'
                            + '<td style=""""><label name=""ocQty"" class=""ocQtyc""  id = ""ocQty' + sl.toString() + '""  > ' + s.POQty + ' </label ></td>'
                            + '<td style=""""><label name=""ShipDate""  id = ""ShipDate' + sl.toString() + '""  > ' + s.ExftyNew + ' </label ></td>'

                            + '<td style=""""> <label  style=""width: 120px"" name=""alreadyKnitt"" id = ""alreadyKnitt' + sl.toString() + '""  > ' + 0 + ' </label ></td>'
                            + '<td style=""""><label  style=""width: 120px"" name=""alreadyKnitt"" id = ""alreadyKnitt' + sl.toString() + '""  > ' + s.KnittingQty + ' </label ></td>'
                            + '<td style="""">  <label name=""smvKn"" class=""smvKn"" id = ""smvKn' + sl.toString() + '""  > ' + s.SmvKn + ' </label ></td>'

                            + '<td style=""");
                WriteLiteral(@"""><input  style=""width: 70px;"" name=""productionPeraMcn"" class=""date_Picker"" readonly type=""text"" id=""ProdMth' + sl.toString() + '"" value=""' + s.ProductionPerMcn + '""     onchange = ""CalLeadTime(' + sl.toString() + ')""  /></td>'
                            + '<td style=""""><input type=""number"" style=""width: 67px;"" class=""reqMachine"" name=""reqMachine""  id=""reqMachine' + sl.toString() + '"" value=""' + s.RequiredMachine + '""     /></td>'
                            + '<td style=""""><input  style=""width: 70px;"" class=""date_Picker"" readonly type=""text"" name=""productionPerDay"" id=""FabIns' + sl.toString() + '""   value=""' + s.productionPerDay + '""     /></td>'
                            + '<td style=""""><input style=""width: 120px"" name=""TrailDate""  type=""text"" id=""Comments' + sl.toString() + '"" value=""' + s.TrialDate + '""  /></td>'
                            + '<td style=""""><input style=""width: 120px""  name=""knittStart"" type=""text"" id=""Comments' + sl.toString() + '"" value=""' + s.StartDate + '""  /></td>'

         ");
                WriteLiteral(@"                   + '<td style=""""><input  style=""width: 70px;"" class=""date_Picker"" name=""KnittEnd"" readonly type=""text"" id=""PCD' + sl.toString() + '"" value=""' + s.EndDate + '""     /></td>'
                            + '<td style=""""><input  style=""width: 70px;"" class=""remarks"" readonly type=""text"" name=""stltype"" id=""PPM' + sl.toString() + '"" value=""' + s.Remarks + '""     /></td>'
                            + '<td style=""""><input  style=""width: 70px;"" class=""date_Picker"" readonly type=""text"" name=""dayBeforeShipping"" id=""PPM' + sl.toString() + '"" value=""' + dayBeforeShipping + '""     /></td>'
                            + '<td style=""""><input type=""button"" value=""Delete Row"" onclick=""DeleteRow(this)""></td>'
                            + '</tr>');
                    });
                    var totalMcn = parseInt( $('#machineQtyInfo').text());
                    $('#RemainingMachineInfo').text(totalMcn - total);
                }
            },
            error: function (errormessage) {
        ");
                WriteLiteral(@"        alert(errormessage.responseText);
            }
        });
    }
    function ShowStlData(stlCode) {
        alert(""ok"");
        }
        function daysdifference(firstDate, secondDate) {
            var startDay = new Date(firstDate);
            var endDay = new Date(secondDate);

            // Determine the time difference between two dates
            var millisBetween = startDay.getTime() - endDay.getTime();

            // Determine the number of days between two dates
            var days = millisBetween / (1000 * 3600 * 24);

            // Show the final number of days between dates
            return Math.round(Math.abs(days));
        }
    function DeleteRow(element) {
        debugger;
        var requiredMachine = parseInt( $(element).closest(""tr"").find('.reqMachine').val());
        var planningSlotDetId = parseInt($(element).closest(""tr"").find('.planningSlotDetailsId').text());
        var remainingMcn = parseInt($('#RemainingMachineInfo').text());
        i");
                WriteLiteral(@"f (planningSlotDetId > 0) {
            $.ajax({
                type: ""GET"",
                url: apiHeader + 'api/CreateSlot/DeletePO/' + planningSlotDetId,
                contentType: ""application/json;charset=utf-8"",
                success: function (result) {

                    if (result == true) {
                        toastr.success(
                            'Delete SuccessFull!',
                            'Yes',
                            {
                                timeOut: 3000,
                                fadeOut: 3000,
                                onHidden: function () {
                                    //  window.location.reload();
                                    var newMcnQty = remainingMcn + requiredMachine;
                                    $('#RemainingMachineInfo').text(newMcnQty);
                                    $(element).closest(""tr"").remove();
                                }
                            }
                      ");
                WriteLiteral("  );\r\n                    } else {\r\n                        toastr.warning(\'problems finding.\');\r\n                    }\r\n\r\n                },\r\n\r\n                complete: function () {\r\n                   // window.location.href = \'");
#nullable restore
#line 1024 "E:\Professional\MyProjects\CoreWork\Bitbucket\BitBucketLive\SweaterPlanLive\aklplanning\Views\View\CreateSlot.cshtml"
                                         Write(Url.Action("CreateSlot", "View"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';

                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        } else {
            var newMcnQty = remainingMcn + requiredMachine;
            $('#RemainingMachineInfo').text(newMcnQty);
            $(element).closest(""tr"").remove();
        }
    }

        function SaveData() {
            debugger;
            var data = [];
            var  planningSlotDetailsId ,planeSlotMasterId ,pOCod
            ,poQty ,smvKn ,requiredMachine ,remarks
            $(""#myTable tbody tr"").each(function (index) {

                planningSlotDetailsId = parseInt($(this).find('.planningSlotDetailsId').text());
                if (planningSlotDetailsId == 0) {
                    planeSlotMasterId = $('#slotId').val();
                    pOCod = $(this).find('.poCodc').text();
                    poQty = $(this).find('.remainingQty').val();
                    smvKn = $(this).find('.smvKn').te");
                WriteLiteral(@"xt();
                    requiredMachine = $(this).find('.reqMachine').val();
                    remarks = $(this).find('.remarks').val();
                    trialDate = $(this).find('.trailDate').val();
                    previousQty = $(this).find('.alreadyKnitt').text();
                    productionPerMcnQty = $(this).find('.productionPeraMcn').val();
                    productionPerDayQty = $(this).find('.productionPerDay').val();
                    dayBeforeShippingqty = $(this).find('.daysBeforeShipping').val();
                    //---->Form validation goes here
                    data.push({
                        PlanningSlotDetailsId: planningSlotDetailsId,
                        PlaneSlotMasterId: planeSlotMasterId,
                        POCod: pOCod,
                        PoQty: poQty,
                        SmvKn: smvKn,
                        RequiredMachine: requiredMachine,
                        Remarks: remarks,
                        TrialDate: trialDate");
                WriteLiteral(@",
                        PreviousQty: previousQty,
                        ProductionPerMcn: productionPerMcnQty,
                        PorductionPerDay: productionPerDayQty,
                        DaybeforeKnitt: dayBeforeShippingqty
                    });
                }
            });
            $.ajax({
                type: ""POST"",
                url: apiHeader + 'api/CreateSlot/SaveAllPO',
                contentType: ""application/json;charset=utf-8"",
                data: JSON.stringify(data),
                success: function (result) {

                    if (result == true) {
                        toastr.success(
                            'Save SuccessFull!',
                            'Yes',
                            {
                                timeOut: 3000,
                                fadeOut: 3000,
                                onHidden: function () {
                                    window.location.reload();
                              ");
                WriteLiteral(@"  }
                            }
                        );
                    } else {
                        toastr.warning('problems finding.');
                    }

                },

                complete: function () {
                   // window.location.href = '");
#nullable restore
#line 1101 "E:\Professional\MyProjects\CoreWork\Bitbucket\BitBucketLive\SweaterPlanLive\aklplanning\Views\View\CreateSlot.cshtml"
                                         Write(Url.Action("CreateSlot", "View"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';

                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
    }

    function ShowStlData(stlNo) {
        debugger
        $.ajax({
            url: apiHeader + 'view/StyleApprovalDetails/',
            type: ""GET"",
            dataType: ""json"",
            async: false,
            data: { styleNo: stlNo },
            success: function (result) {
                $('#viewStyle').modal({ backdrop: 'static', keyboard: false });
                $('#viewBody').html(result);
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }

    function ShowAll(stlNo) {
        debugger
        $.ajax({
            url: apiHeader + 'PartialView/PlanningPoView/',
            type: ""GET"",
            dataType: ""html"",
            async: false,
            data: { slotId: stlNo },
            success: func");
                WriteLiteral(@"tion (result) {
                $('#viewStyle').modal({ backdrop: 'static', keyboard: false });
                $('#viewBody').html(result);
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }
    
    function PrintAll(element) {
        
        var dataList = """";
        $(""#InitalPlanning_"" + element+ "" tbody tr"").each(function (index) {
            if ($(this).find('.checkBoxCls').prop('checked')) {
                debugger;
                var planningSlotId = parseInt($(this).find('.planMasterId').val());
                if (dataList != '')
                    dataList = dataList + "","" + planningSlotId;
                else {
                    dataList = planningSlotId;
                }
            }
           
        });

        debugger
        $.ajax({
            url: apiHeader + 'PartialView/PlanningPoListView/',
            type: ""GET"",
            dataType: ""html"",
     ");
                WriteLiteral(@"       async: false,
            data: { slotId: dataList },
            success: function (result) {
                $('#viewStyle').modal({ backdrop: 'static', keyboard: false });
                $('#viewBody').html(result);
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }

    //function Print(e) {
    //    if ($('#viewPo tr').length == 0) {
    //        toastr.warning(""No Data to Export"");
    //        }
    //        else {
    //        var file = new Blob([$('#viewBody').html()], { type: ""application/vnd.ms-excel"" });
    //            var url = URL.createObjectURL(file);

    //            var a = $(""<a />"",
    //                {
    //                    href: url,

    //                    download: ""PoList""

    //                }).appendTo(""body"").get(0).click();


    //            e.preventDefault();

    //    }
    //}

    function ExportAllData_HTML() {
     ");
                WriteLiteral(@"   var wb = { SheetNames: [], Sheets: {} };
        var ws9 = XLSX.utils.table_to_sheet(document.getElementById('viewBody'), { raw: true });
        wb.SheetNames.push('Temp Table'); wb.Sheets[""Temp Table""] = ws9;
        XLSX.writeFile(wb, ""myTemp.xlsx"", { cellStyles: true });
    }

</script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
