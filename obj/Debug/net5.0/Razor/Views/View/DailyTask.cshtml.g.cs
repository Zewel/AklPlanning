#pragma checksum "D:\AKLProjects\ZewelProjects\AKLNew\aklplanningGitHubLive\Views\View\DailyTask.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "31c315ac8cfc5f45ea0b902a5694359c65d0eaed"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_View_DailyTask), @"mvc.1.0.view", @"/Views/View/DailyTask.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\AKLProjects\ZewelProjects\AKLNew\aklplanningGitHubLive\Views\_ViewImports.cshtml"
using SweaterPlanning;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\AKLProjects\ZewelProjects\AKLNew\aklplanningGitHubLive\Views\_ViewImports.cshtml"
using SweaterPlanning.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"31c315ac8cfc5f45ea0b902a5694359c65d0eaed", @"/Views/View/DailyTask.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"403552f2f1d5c1e2905d5e7e2880ca8cb4e6f341", @"/Views/_ViewImports.cshtml")]
    public class Views_View_DailyTask : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div class=""container-fluid"">
    <div class=""row"">
        <!-- left column -->
        <div class=""col-md-12"">
            <!-- general form elements -->
            <div class=""card card-primary"">
                <div class=""card-header"">
                    <h3 class=""card-title"">Daily Task</h3>
                </div>
                <!-- /.card-header -->
                <!-- form start -->
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "31c315ac8cfc5f45ea0b902a5694359c65d0eaed3688", async() => {
                WriteLiteral(@"
                    <div class=""card-body"">
                        <div class=""row"">
                            <div class=""col-md-6"">
                                <div class=""form-group"" id=""divOrderDate"">
                                    <label for=""txtOrderDate"">Task Date</label>
                                    <input type=""text"" id=""taskDate"" class=""form-control datepicker"" onchange=""CheckCurrentdate()""");
                BeginWriteAttribute("value", " value=\"", 861, "\"", 906, 1);
#nullable restore
#line 18 "D:\AKLProjects\ZewelProjects\AKLNew\aklplanningGitHubLive\Views\View\DailyTask.cshtml"
WriteAttributeValue("", 869, DateTime.Now.ToString("dd MMM yyyy"), 869, 37, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@" />
                                </div>
                                <div class=""form-group"">
                                    <label for=""txtOrderDate"">Start Time</label>
                                    <div class='input-group date' id='datetimepicker3' data-target-input=""nearest"">

                                        <input type='text' class=""form-control"" id='startDate' data-target=""#datetimepicker3"" />
                                        <div class=""input-group-append"" data-target=""#datetimepicker3"" data-toggle=""datetimepicker"">
                                            <div class=""input-group-text"">
                                                <i class=""far fa-clock""></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class=""form-group"">
                                    <label for=""txtOrderDate");
                WriteLiteral(@""">End Time</label>
                                    <div class='input-group date' id='endDate' data-target-input=""nearest"">

                                        <input type='text' class=""form-control"" id='endTime' data-target=""#datetimepicker3"" />
                                        <div class=""input-group-append"" data-target=""#datetimepicker3"" data-toggle=""datetimepicker"">
                                            <div class=""input-group-text"">
                                                <i class=""far fa-clock""></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class=""col-md-6"">
                                <div class=""form-group"" id=""divdllTaskType"">
                                    <label for=""dllTaskType"">Task Type</label>
                                    <select c");
                WriteLiteral(@"lass=""form-control select2"" style=""width: 100%;"" id=""dllTaskType"">
                                    </select>
                                </div>
                                <div class=""form-group"">
                                    <label>Task Description</label>
                                    <textarea class=""form-control"" id=""taskDescription"" rows=""3"" placeholder=""Enter ...""></textarea>
                                </div>
                                <div class=""form-group"">
                                    <label>Responsible</label>
                                    <input type=""text"" class=""form-control"" id=""responsible"" placeholder=""Enter ..."">
                                </div>
                                <div class=""form-group"">
                                    <div class=""countdown-bar"" id=""countdownB"">
                                        <div></div>
                                        <div></div>
                                    </div>");
                WriteLiteral("\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                <div class=""card-footer"">
                    <button type=""submit"" onclick=""Add()"" class=""float-right btn btn-primary"">Submit</button>
                </div>
            </div>
        </div>
        <div class=""col-md-12"">
            <div class=""card"">
                <div class=""card-header"">
                    <h3 class=""card-title""><span class=""fa fa-list""></span> Task lists</h3>
                </div>
                <!-- /.card-header -->
                <div class=""card-body"">
                    <table id=""dailyTaskTable"" class=""table table-bordered table-hover dataTable"">
                        <thead>
                            <tr>
                                <th>Activity Id</th>
                                <th>Activity Code</th>
                                <th>Activity Date</th>
                                <th>Start Time</th>
                                <th>End Time</th>
                                <th>Task Type</th>
             ");
            WriteLiteral("                   <th>Task Description</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        </tbody>\r\n");
            WriteLiteral("                    </table>\r\n                </div>\r\n                <!-- /.card-body -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        $(function () {
            $('#startDate').datetimepicker({
                format: 'LT'
            }); $('#endTime').datetimepicker({
                format: 'LT'
            });
            LoadTaskType('dllTaskType');


            //$(""#dailyTaskTable"").DataTable({
            //    ""ajax"": {
            //        ""url"": apiHeader + ""api/DailyActivity/GetAll"",
            //        ""type"": ""GET"",
            //        ""datatype"": ""json"",
            //    },
            //    ""columns"": [
            //        { ""data"": ""ActivityId"", ""autowidth"": true },
            //        { ""data"": ""ActivityCode"", ""autowidth"": true },
            //        { ""data"": ""ActivityDate"", ""autowidth"": true },
            //        { ""data"": ""StartTime"", ""autowidth"": true },
            //        { ""data"": ""EndTime"", ""autowidth"": true },
            //        { ""data"": ""TaskTypeId"", ""autowidth"": true },
            //        { ""data"": ""TaskDescription"", ""autowidth"": true }

  ");
                WriteLiteral(@"          //    ]
            //});
            $('#dailyTaskTable').DataTable({
                ""ajax"": { ""url"": apiHeader + ""api/DailyActivity/GetAll"", ""dataSrc"": """" },
                ""columns"": [{ ""data"": ""ActivityId"" },
                    { ""data"": ""ActivityCode"" },
                    { ""data"": ""ActivityDate"" },
                    { ""data"": ""StartTime"" },
                    { ""data"": ""EndTime"" },
                    { ""data"": ""TaskTypeId"" },
                    { ""data"": ""TaskDescription"" },]
            });
        });

        var Toast = Swal.mixin({
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });

        function LoadTaskType(elementId) {
            $.ajax({
                url: apiHeader + 'api/TaskTypes/GetTaskTypes',
                type: ""GET"",
                dataType: ""json"",
                success: function (result) {
                    $('#' + elementId + '').empty();
      ");
                WriteLiteral(@"              $('#' + elementId + '').append(""<option value='0'>--Select Task Type--</option>"");

                    for (var i = 0; i < result.length; i++) {

                        $('#' + elementId + '').append($(""<option></option>"").val(result[i].TaskTypeId).html(result[i].TastTypeName));
                    }
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }
        function Add() {
            var obj = {
                ActivityDate: $('#taskDate').val(),
                StartTime: $('#startDate').val(),
                EndTime: $('#endTime').val(),
                TaskTypeId: $('#dllTaskType').val(),
                TaskDescription: $('#taskDescription').val()
            };
            $.ajax({
                type: ""POST"",
                url: apiHeader + 'api/DailyActivity/Add',
                contentType: ""application/json;charset=utf-8"",
                da");
                WriteLiteral(@"ta: JSON.stringify(obj),
                success: function (result) {
                    Toast.fire({
                        icon: 'success',
                        title: result
                    })
                    //Swal.fire(
                    //    result,
                    //    'You clicked the button!',
                    //    'success'
                    //)
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }

        function LoadData() {
            $.ajax({
                url: apiHeader + 'api/TaskTypes/GetTaskTypes',
                type: ""GET"",
                dataType: ""json"",
                success: function (result) {
                    $.ajax({
                        url: apiHeader + 'api/TaskTypes/GetTaskTypes',
                        type: ""GET"",
                        dataType: ""json"",
                        success: function (");
                WriteLiteral(@"result) {
                            $('#' + elementId + '').empty();
                            $('#' + elementId + '').append(""<option value='0'>--Select Task Type--</option>"");

                            for (var i = 0; i < result.length; i++) {

                                $('#' + elementId + '').append($(""<option></option>"").val(result[i].TaskTypeId).html(result[i].TastTypeName));
                            }
                        },
                        error: function (errormessage) {
                            alert(errormessage.responseText);
                        }
                    });
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
