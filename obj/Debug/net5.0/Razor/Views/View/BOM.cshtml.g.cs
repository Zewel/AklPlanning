#pragma checksum "D:\AKLProjects\ZewelProjects\AKLNew\aklplanningGitHubLive\Views\View\BOM.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "25f5d6312cb545842631a185a9c0ae2944aa5f2a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_View_BOM), @"mvc.1.0.view", @"/Views/View/BOM.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\AKLProjects\ZewelProjects\AKLNew\aklplanningGitHubLive\Views\_ViewImports.cshtml"
using SweaterPlanning;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\AKLProjects\ZewelProjects\AKLNew\aklplanningGitHubLive\Views\_ViewImports.cshtml"
using SweaterPlanning.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"25f5d6312cb545842631a185a9c0ae2944aa5f2a", @"/Views/View/BOM.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"403552f2f1d5c1e2905d5e7e2880ca8cb4e6f341", @"/Views/_ViewImports.cshtml")]
    public class Views_View_BOM : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div class=""container-fluid"">
    <div class=""row"">
        <!-- left column -->
        <div class=""col-md-12"">
            <div class=""card card-info"" style=""background-color:yellowgreen"">
                <div class=""card-header"" style=""color: aqua; background-color: #327c10 "">

                    <div class=""row"">
                        <div class=""col-md-3"">
                            <h3 class=""card-title""><span class='fas fa-tshirt' style='font-size:25px;color:darkmagenta'></span>BOM Information</h3>

                        </div>
                        <div class=""col-md-4"">
                            <div class=""row"">
                                <div class=""col-md-10"">
                                    <input type=""text"" class=""search form-control float-right"" placeholder=""Search Style..."" id=""styleId"" /> ");
            WriteLiteral(@"
                                </div>
                                <div class=""col-md-2"">
                                    <button class=""button  btn-success"" data-toggle=""tooltip"" data-placement=""top"" title=""Search Style"" style=""border-radius:50%; margin-top:10px"" onclick=""StyleInfo()""><span class=""fa fa-search""></span></button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class=""card-body"" id=""workCalanderDiv"">
");
            WriteLiteral("\r\n                    <div class=\"row\" id=\"styleInfo\">\r\n\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n</div>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n");
#nullable restore
#line 55 "D:\AKLProjects\ZewelProjects\AKLNew\aklplanningGitHubLive\Views\View\BOM.cshtml"
      await Html.RenderPartialAsync("_ValidationScriptsPartial");

#line default
#line hidden
#nullable disable
                WriteLiteral(@"

    <script>


        $(function () {
            $(""#styleId"").autocomplete({

                source: function (request, response) {
                    $.ajax({
                        url: apiHeader + ""api/Common/GetStlNo/"" + request.term,
                        dataType: ""json"",
                        success: function (data) {
                            var stl = [];
                            $.each(data, function (i, item) {
                                stl.push(item.StlDesc);
                            });
                            response(stl);

                        }
                    });
                },
                minLength: 3,

            });
         });
    function GetGauge(elamentName) {

        var yearId = parseInt($('#dllCurrentYear').val());
        $.ajax({
            url: apiHeader + 'api/Common/GetAllMachineQty/' + yearId,
            type: ""GET"",
            dataType: ""json"",
            async: false,
            success:");
                WriteLiteral(@" function (result) {

                allYears = result
                const key = 'GaugeId';
                const FactoryResult = [...new Map(result.map(item =>
                    [item[key], item])).values()].sort();
                if (result.length > 0) {
                    $('#' + elamentName + '').empty();
                    $('#' + elamentName + '').append(""<option value=''>--Select Gauge--</option>"");
                    for (var i = 0; i < FactoryResult.length; i++) {

                        $('#' + elamentName + '').append($(""<option></option>"").val(FactoryResult[i].GaugeId).html(FactoryResult[i].GaugeDesc));
                    }
                }
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });

    }
    function GetBrand(elamentName) {

        var yearId = parseInt($('#dllCurrentYear').val());
        $.ajax({
            url: apiHeader + 'api/Common/GetAllMachineQty/' + yearId,");
                WriteLiteral(@"
            type: ""GET"",
            dataType: ""json"",
            async: false,
            success: function (result) {

                allYears = result
                const key = 'BrandId';
                const FactoryResult = [...new Map(result.map(item =>
                    [item[key], item])).values()].sort();
                if (result.length > 0) {
                    $('#' + elamentName + '').empty();
                    $('#' + elamentName + '').append(""<option value=''>--Select Brand--</option>"");
                    for (var i = 0; i < FactoryResult.length; i++) {

                        $('#' + elamentName + '').append($(""<option></option>"").val(FactoryResult[i].BrandId).html(FactoryResult[i].McnType));
                    }
                }
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });

    }
    function GetKnOperation(elamentName) {

        var yearId = parseInt($('#dll");
                WriteLiteral(@"CurrentYear').val());
        $.ajax({
            url: apiHeader + 'api/Common/GetKnittingOperation',
            type: ""GET"",
            dataType: ""json"",
            async: false,
            success: function (result) {


                if (result.length > 0) {
                    $('#' + elamentName + '').empty();
                    $('#' + elamentName + '').append(""<option value=''>--Select Knitting Operation--</option>"");
                    for (var i = 0; i < result.length; i++) {

                        $('#' + elamentName + '').append($(""<option></option>"").val(result[i].KntOperationId).html(result[i].KntOperationName));
                    }
                }
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });

    }
         function StyleInfo() {
             var styleNo = $('#styleId').val();

             if (styleNo != """") {
                 var urlpath = '");
#nullable restore
#line 170 "D:\AKLProjects\ZewelProjects\AKLNew\aklplanningGitHubLive\Views\View\BOM.cshtml"
                           Write(Url.Action("BOM", "PartialView"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';
                 $.ajax({
                     url: urlpath,
                     dataType: 'html',
                     type: ""Get"",
                     data: { styleNo: styleNo },
                     async: false,
                     success: function (data) {


                         $(""#styleInfo"").html("""");
                         $(""#styleInfo"").html(data);
                         //$("".details-control"").trigger(""click"");

                         GetBrand('dllMcnType');
                         GetGauge('dllGauge');
                     },
                     complete: function () {
                         $(""#styleReName"").hide();
                         $(""#stlSaveBtn"").hide();
                         $(""#stylePoQtyEdit"").hide();
                         $(""#qtySaveBtn"").hide();
                           // window.location.href = '");
#nullable restore
#line 192 "D:\AKLProjects\ZewelProjects\AKLNew\aklplanningGitHubLive\Views\View\BOM.cshtml"
                                                 Write(Url.Action("CreateSlot", "View"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';

                       },
                       error: function (errormessage) {
                           alert(errormessage.responseText);
                       }



                 });
             } else {
                 toastr.warning('Please Give the Style Name');
             }


        }
        function EditRequest() {
            $(""#stlDesLbl"").hide();
            $(""#styleReName"").show();
            $(""#stlSaveBtn"").show();
            $(""#stlEditBtn"").hide();
    }

        function PoQtyEditRequest() {
            $(""#pottlLavel"").hide();
            $(""#stylePoQtyEdit"").show();
            $(""#qtySaveBtn"").show();
            $(""#qtyeditBtn"").hide();
    }
    function SaveStlRequest() {
        debugger;
        var stlCode = parseInt($('#styleCode').val());
        var stlName = $('#styleReName').val();

        if (stlName != """") {

                 $.ajax({
                     url: apiHeader + 'api/AddEditPo/StyleReName/' + stlCode + '/' + s");
                WriteLiteral(@"tlName ,
                     dataType: ""json"",
                     type: ""POST"",
                     data: {},
                     async: false,
                     success: function (data) {

                         if (parseInt(data[0].KeyValue)>0) {
                             toastr.success('the Style Name Change Successfully');
                         } else {
                             toastr.error('Please Give the another Style Name');
                         }

                     },
                     complete: function () {
                         $(""#styleReName"").hide();
                         $(""#stlSaveBtn"").hide();
                         $(""#stlEditBtn"").show();
                         $(""#stlDesLbl"").show();
                         $(""#stlDesLbl"").text(stlName);
                           // window.location.href = '");
#nullable restore
#line 249 "D:\AKLProjects\ZewelProjects\AKLNew\aklplanningGitHubLive\Views\View\BOM.cshtml"
                                                 Write(Url.Action("CreateSlot", "View"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';

                       },
                       error: function (errormessage) {
                           alert(errormessage.responseText);
                       }



                 });
             } else {
                 toastr.warning('Please Give the Style Name');
             }

    }
    function SaveStlQtyRequest() {
        debugger;
        var stlCode = parseInt($('#styleCode').val());
        var editQty = parseInt($('#stylePoQtyEdit').val());

        if (editQty != 0) {

                 $.ajax({
                     url: apiHeader + 'api/AddEditPo/StyleReQty/' + stlCode + '/' + editQty ,
                     dataType: ""json"",
                     type: ""POST"",
                     data: {},
                     async: false,
                     success: function (data) {

                         if (data == true) {
                             toastr.success('Change Qty Successfully');
                         } else {
                             t");
                WriteLiteral(@"oastr.error('Please Give the another Style Name');
                         }

                     },
                     complete: function () {
                         $(""#pottlLavel"").show();
                         $(""#stylePoQtyEdit"").hide();
                         $(""#qtySaveBtn"").hide();
                         $(""#qtyeditBtn"").show();
                         $(""#pottlLavel"").text(editQty);
                           // window.location.href = '");
#nullable restore
#line 292 "D:\AKLProjects\ZewelProjects\AKLNew\aklplanningGitHubLive\Views\View\BOM.cshtml"
                                                 Write(Url.Action("CreateSlot", "View"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';

                       },
                       error: function (errormessage) {
                           alert(errormessage.responseText);
                       }



                 });
             } else {
                 toastr.warning('Please Give the Style Name');
             }

    }
        function SavePo() {
            debugger;
            var poCodeId = parseInt($('#poCodId').val());
            var stlNo = parseInt($('#styleCode').val());
            var poNo = $('#poNo').val().trim();
            var color = $('#color').val();
            var poQty = parseInt($('#poQty').val());
            var bookExfty = $('#bookExfty').val();
            var poExfty = $('#poExfty').val();
            var revExfty = $('#revExfty').val();
            var remarks = $('#remarks').val();
            var CanQty = $('#CanQty').val();
            var CanRemarks = $('#CanRemarks').val();
            var iniPlnDate = $('#initialPlannigDate').val();
            debugger;
       ");
                WriteLiteral(@"     if (poNo == """" || isNaN(poQty) || bookExfty == """" || poExfty == """" || iniPlnDate =="""") {
                toastr.warning('Please Provide All Input.');
                return false;
            }
            else {
                if (isNaN(poCodeId)) {
                    var obj = {
                        stylecode: stlNo,
                        PONo: poNo,
                        POColor: color,
                        POQty: poQty,
                        BookingExfty: bookExfty,
                        POExfty: poExfty,
                        RevExfty: revExfty,
                        InitialPlaneDate: iniPlnDate,
                        Remarks: remarks,
                        CnclQty: CanQty,
                        CnclRemarks: CanRemarks
                    };
                    var urlpath = '");
#nullable restore
#line 341 "D:\AKLProjects\ZewelProjects\AKLNew\aklplanningGitHubLive\Views\View\BOM.cshtml"
                              Write(Url.Action("AddPo", "PartialView"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';
                    $.ajax({
                        type: ""POST"",
                        url: urlpath,
                        contentType: ""application/json;charset=utf-8"",
                        data: JSON.stringify(obj),
                        success: function (result) {
                            debugger;
                            $('#poCodId').val("""");
                            $('#styleCode').val("""");
                            $('#poNo').val("""");
                            $('#color').val("""");
                            $('#poQty').val("""");
                            $('#bookExfty').val("""");
                            $('#poExfty').val("""");
                            $('#revExfty').val("""");
                            $('#remarks').val("""");
                            $('#CanQty').val("""");
                            $('#CanRemarks').val("""");
                            $('#initialPlannigDate').val("""");
                            

                            ");
                WriteLiteral(@"$(""#poListBody"").html("""");
                            $(""#poListBody"").html(result);

                           
                        },

                        complete: function () {
                            debugger;
                            toastr.success(
                                'Save SuccessFull!',
                                'Yes',
                                {
                                    timeOut: 3000,
                                    fadeOut: 3000,
                                    onHidden: function () {
                                        // window.location.reload();
                                    }
                                }
                            );
                        },
                        error: function (errormessage) {
                            alert(errormessage.responseText);
                        }
                    });
                } else {
                    var obj = {
            ");
                WriteLiteral(@"            POCod: poCodeId,
                        stylecode: stlNo,
                        PONo: poNo,
                        POColor: color,
                        POQty: poQty,
                        BookingExfty: bookExfty,
                        POExfty: poExfty,
                        RevExfty: revExfty,
                        InitialPlaneDate: iniPlnDate,
                        Remarks: remarks,
                        CnclQty: CanQty,
                        CnclRemarks: CanRemarks
                    };
                    var urlpath = '");
#nullable restore
#line 402 "D:\AKLProjects\ZewelProjects\AKLNew\aklplanningGitHubLive\Views\View\BOM.cshtml"
                              Write(Url.Action("AddPo", "PartialView"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';
                    $.ajax({
                        type: ""POST"",
                        url: urlpath,
                        contentType: ""application/json;charset=utf-8"",
                        data: JSON.stringify(obj),
                        success: function (result) {
                            debugger;
                            $('#poCodId').val("""");
                            $('#styleCode').val("""");
                            $('#poNo').val("""");
                            $('#color').val("""");
                            $('#poQty').val("""");
                            $('#bookExfty').val("""");
                            $('#poExfty').val("""");
                            $('#revExfty').val("""");
                            $('#remarks').val("""");
                            $('#CanQty').val("""");
                            $('#CanRemarks').val("""");
                            $('#initialPlannigDate').val("""");

                            debugger;
                   ");
                WriteLiteral(@"         toastr.success(
                                'Edit SuccessFull!',
                                'Yes',
                                {
                                    timeOut: 3000,
                                    fadeOut: 3000,
                                    onHidden: function () {
                                        // window.location.reload();
                                    }
                                }
                            );


                            $(""#poListBody"").html("""");
                            $(""#poListBody"").html(result);


                        },

                        complete: function () {


                        },
                        error: function (errormessage) {
                            alert(errormessage.responseText);
                        }
                    });
                }


            }
        }

    function EditPo(poCod, event) {
        debugger;
        var p");
                WriteLiteral(@"oCod = poCod;
        var data = $(event).closest(""tr"").clone();
        var poNO = data.find('td:eq(0)').text().trim();
        var color = data.find('td:eq(1)').text().trim();
        var poQty = parseInt(data.find('td:eq(2)').text());
        var bookExfty = data.find('td:eq(3)').text().trim();
        var poExfty = data.find('td:eq(4)').text().trim();
        var revExfty = data.find('td:eq(5)').text().trim();
        var remarks = data.find('td:eq(7)').text().trim();
        var cancelQty = data.find('td:eq(8)').text().trim();
        var cancleremarks = data.find('td:eq(9)').text().trim();
        var initialPlanDate = data.find('td:eq(10)').text().trim();
        var bkex = moment(bookExfty).format('YYYY-MM-DD');
        var poex = moment(poExfty).format('YYYY-MM-DD');
        var revex = moment(revExfty).format('YYYY-MM-DD');
        var iniPlnDate = moment(initialPlanDate).format('YYYY-MM-DD');
        $('#poCodId').val(poCod);
        $('#poNo').val(poNO);
        $('#color').val(c");
                WriteLiteral(@"olor);
        $('#poQty').val(poQty);
        $('#bookExfty').val(bkex);
        $('#poExfty').val(poex);
        $('#revExfty').val(revex);
        $('#remarks').val(remarks);
        $('#CanQty').val(cancelQty);
        $('#CanRemarks').val(cancleremarks);
        $('#initialPlannigDate').val(iniPlnDate);
    }

        function IndividualPoSplit(pocod, poQty, initialPlanDate) {
            $('#individualPo').modal();
            GetBrand('dllPoMcnType');
            GetGauge('dllPoGauge');
            GetKnOperation('dllOpType');
            debugger;
            $('#poQuantity').val(poQty);
            $('#poCode').val(pocod);
            $('#planDate').val(initialPlanDate);
        }

        function AddPoInTempList() {
            debugger;
            var gaugeid = $('#dllPoGauge').val();
            var brandid = $('#dllPoMcnType').val();
            var operationid = $('#dllOpType').val();
            var planDate = $('#planDate').val();
            var smv = isNaN(parse");
                WriteLiteral(@"Int($('#smvValueF').val())) ? 0 : parseInt($('#smvValueF').val());
            var poQty = parseInt($('#poQuantity').val());
            var gaugeName = $(""#dllPoGauge option:selected"").text();
            var BrandName = $(""#dllPoMcnType option:selected"").text();
            var OperationName = $(""#dllOpType option:selected"").text();
            if (gaugeid == """" || brandid == """" || operationid == """" || smv == 0) {
                toastr.warning(""Input All Data"");
                return false;
            }

            var rowCountItem = parseInt($('#PoSplitTable tbody tr').length);
            var sl = rowCountItem + 1;
            var dtThreadPositionSize = $('#PoSplitTable');
            var tableBodyThreadPositionSize = dtThreadPositionSize.find('tbody');
            //tableBody.empty();

            tableBodyThreadPositionSize.append('<tr id=""tr_' + sl + '"">'

                + '<td style=""display:none;""><input  style=""width: 120px"" type=""text"" class=""gaugeCls""   value=""' + gaugeid + ");
                WriteLiteral(@"'""  /></td>'
                + '<td style=""display:none;""><input  style=""width: 120px"" type=""text"" class=""brandCls""   value=""' + brandid + '""  /></td>'
                + '<td style=""display:none;""><input  style=""width: 120px"" type=""text"" class=""operationCls""   value=""' + operationid + '""/></td>'
                + '<td>' + sl+'</td>'
                + '<td>' + gaugeName+'</td>'
                + '<td>' + BrandName +'</td>'
                + '<td>' + OperationName +'</td>'
                + '<td class=""smvCls"" >' + smv +'</td>'
                + '<td class=""poQtyCls"" >' + poQty +'</td>'
                + '<td class=""planDateCls"" >' + planDate +'</td>'
                + '<td style=""width: 50px""><button class=""button btn-danger"" style=""float: left; border-radius: 50%;"" onclick=""DeleteRow(this)"" > <span class="" fa fa-trash""></span></button> </td>'

                + '</tr>');
        }
         function SaveEachPoSplit() {

               var PoList = [];
               var pOCod;

             ");
                WriteLiteral(@"$('#PoSplitTable tbody tr').each(function (index) {

                       debugger;
                   pOCod = parseInt($(this).find('.gaugeCls').val());


                       PoList.push({
                           PoCod: parseInt($('#poCode').val()),
                           StlCod: parseInt(parseInt($('#styleCode').val())),
                           GaugeId: parseInt($(this).find('.gaugeCls').val()),
                           BrandId: parseInt($(this).find('.brandCls').val()),
                           PoQty: parseInt($(this).find('.poQtyCls').text()),
                           Smv: parseInt($(this).find('.smvCls').text()),
                           InitialPlaneDate: $(this).find('.planDateCls').text(),
                           KntOperationId: parseInt($(this).find('.operationCls').val())
                       });



               });
               debugger;


               if (PoList.length>0) {

                   $.ajax({
                       type: ""POST"",");
                WriteLiteral(@"
                       url: apiHeader + 'api/PoSplit/AddPoSplit',
                       contentType: ""application/json;charset=utf-8"",
                       data: JSON.stringify(PoList),
                       success: function (result) {

                           if (result == true) {
                               toastr.success(
                                   'Save SuccessFull!',
                                   'Yes',
                                   {
                                       timeOut: 3000,
                                       fadeOut: 3000,
                                       onHidden: function () {
                                           window.location.reload();
                                       }
                                   }
                               );
                           } else {
                               toastr.warning('problems finding / Session End');
                           }

                       },

 ");
                WriteLiteral("                      complete: function () {\r\n                           // window.location.href = \'");
#nullable restore
#line 593 "D:\AKLProjects\ZewelProjects\AKLNew\aklplanningGitHubLive\Views\View\BOM.cshtml"
                                                 Write(Url.Action("CreateSlot", "View"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';

                       },
                       error: function (errormessage) {
                           alert(errormessage.responseText);
                       }
                   });
               }
               else {
                   toastr.warning('Select at Least One Po from Po List.');
                   return false;
               }
    }



    </script>


");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
