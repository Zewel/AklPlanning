#pragma checksum "D:\AKLProjects\ZewelProjects\AKLNew\aklplanning\Views\View\MenuCreation.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "add776a54d57bd4348cf79e9464e3fa800ea5a62"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_View_MenuCreation), @"mvc.1.0.view", @"/Views/View/MenuCreation.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\AKLProjects\ZewelProjects\AKLNew\aklplanning\Views\_ViewImports.cshtml"
using SweaterPlanning;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\AKLProjects\ZewelProjects\AKLNew\aklplanning\Views\_ViewImports.cshtml"
using SweaterPlanning.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"add776a54d57bd4348cf79e9464e3fa800ea5a62", @"/Views/View/MenuCreation.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"403552f2f1d5c1e2905d5e7e2880ca8cb4e6f341", @"/Views/_ViewImports.cshtml")]
    public class Views_View_MenuCreation : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
<div class=""container-fluid"">
    <div class=""row"">
        <!-- left column -->
        <div class=""col-md-12"">
            <div class=""card card-primary"">
                <div class=""card-header row"">

                    <div class=""col-md-4"">
                        <h3 class=""card-title""><span class=""fa fa-list""></span>All Menu List</h3>

                    </div>

                    <div class=""col-md-2"">
");
            WriteLiteral(@"
                        <button type=""button"" class=""btn btn-default float-right"" onclick=""Create()"">
                            New Menu
                        </button>
                    </div>

                </div>

                <div class=""row"" id=""createMenuId"">
                    <div class=""card-body"">
                        <div class=""form-group"">
                            <label>Menu Step</label>
                            <select class=""form-control select2"" onchange=""LoadParent('parentId')"" id=""menuStep"" style=""width: 100%;"">
                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "add776a54d57bd4348cf79e9464e3fa800ea5a624483", async() => {
                WriteLiteral("--Select Menu Step--");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

                            </select>
                        </div>
                        <div class=""form-group"">
                            <label>Parent Name</label>
                            <select class=""form-control select2"" id=""parentId"" style=""width: 100%;"">
                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "add776a54d57bd4348cf79e9464e3fa800ea5a625976", async() => {
                WriteLiteral("--Select Parent--");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                            </select>
                        </div>
                        <div class=""form-group"">
                            <label for=""exampleInputEmail1"">Menu Name<i class=""danger""> *</i></label>
                            <input type=""text"" class=""form-control"" id=""menuName"" placeholder=""Enter email"">
                        </div>
                        <div class=""form-check"">
                            <input type=""checkbox"" class=""form-check-input"" id=""isMVC"">
                            <label class=""form-check-label"" for=""isMVC"">Is MVC</label>
                        </div>
                        <div class=""form-check"">
                            <input type=""checkbox"" onclick=""DivHideShow()"" class=""form-check-input"" id=""isPage"">
                            <label class=""form-check-label"" for=""isPage"">Is Page</label>
                        </div>

                        <div class=""form-group"" id=""controllerDiv"">
                            <label for=""");
            WriteLiteral(@"controllerName"">Controller Name</label>
                            <input type=""text"" class=""form-control"" id=""controllerName"" placeholder=""Enter email"">
                        </div>
                        <div class=""form-group"" id=""actionDiv"">
                            <label for=""actionName"">Action Name</label>
                            <input type=""text"" class=""form-control"" id=""actionName"" placeholder=""Enter email"">
                        </div>
                        <div class=""form-group"">
                            <label>Menu Type</label>
                            <select class=""form-control select2"" style=""width: 100%;"" id=""menuType"">
                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "add776a54d57bd4348cf79e9464e3fa800ea5a628984", async() => {
                WriteLiteral("--Select Menu Type--");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

                            </select>
                            <div class=""form-check"">
                                <input type=""checkbox"" class=""form-check-input"" id=""isActive"" checked>
                                <label class=""form-check-label"" for=""isActive"">Is Active</label>
                            </div>
                            <div class=""form-group card-footer"" id=""actionDiv"">
                                <button class=""btn btn-primary float-right"" onclick=""Add()"">Save</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class=""card-body table-responsive"" id=""DataDiv"">
                    <table id=""dailyTaskTable"" class=""table table-bordered table-hover dataTable"">
                        <thead>
                            <tr style=""background-color:antiquewhite"">

                                <th align=""center"">MenuId</th>
                                <th ali");
            WriteLiteral(@"gn=""center"">Menu Name</th>
                                <th align=""center"">Controller Name</th>
                                <th align=""center"">Action Name</th>
                                <th align=""center"">Parent</th>
                                <th align=""center"">IsPage</th>
                                <th align=""center"">IsMVC</th>
                                <th align=""center"">Menu Step Name</th>
                                <th align=""center"">Menu Type Name</th>
                                <th align=""center"">IsActive</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>

                    </table>
                </div>
            </div>
        </div>

    </div>
</div>
");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n");
#nullable restore
#line 106 "D:\AKLProjects\ZewelProjects\AKLNew\aklplanning\Views\View\MenuCreation.cshtml"
      await Html.RenderPartialAsync("_ValidationScriptsPartial");

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
    <script>
IDBCursor


        $(function () {
            debugger;
            
            LoadTableData();
            LoadMenuSetp('menuStep')
            LoadMenuType('menuType')

            $('#createMenuId').hide();
            $('#controllerDiv').hide();
            $('#actionDiv').hide();


            $(""#saveBtn"").click(function (event) {
                debugger;
                event.preventDefault();
                Add();

             window.location.href = '");
#nullable restore
#line 129 "D:\AKLProjects\ZewelProjects\AKLNew\aklplanning\Views\View\MenuCreation.cshtml"
                                Write(Url.Action("MenuCreation", "View"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';

            });
        });
        function LoadMenuSetp(elementId) {
            debugger;
            $.ajax({
                url: apiHeader + 'api/Common/GetAllMenuStep',
                type: ""GET"",
                dataType: ""json"",
                success: function (result) {
                    $('#' + elementId + '').empty();
                    $('#' + elementId + '').append(""<option value=''>--Select Menu Step--</option>"");
                    for (var i = 0; i < result.length; i++) {

                        $('#' + elementId + '').append($(""<option></option>"").val(result[i].MenuStepId).html(result[i].MenuStepName));
                    }
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });

        }

        function LoadMenuType(elementId) {
            debugger;
            $.ajax({
                url: apiHeader + 'api/Common/GetAllMenuType',
                ");
                WriteLiteral(@"type: ""GET"",
                dataType: ""json"",
                success: function (result) {
                    $('#' + elementId + '').empty();
                    $('#' + elementId + '').append(""<option value=''>--Select Menu Type--</option>"");
                    for (var i = 0; i < result.length; i++) {

                        $('#' + elementId + '').append($(""<option></option>"").val(result[i].MenuTypeId).html(result[i].MenuTypeName));
                    }
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });

        }
        function LoadTableData() {
            //$('#equictntbl').dataTable().fnDestroy();
            $('#dailyTaskTable').DataTable().clear().destroy();
            var table = $('#dailyTaskTable').DataTable({
                ""ajax"": { ""url"": apiHeader + ""api/Common/GetAllMenu"", ""dataSrc"": """", ""crossDomain"": true, },
                ""buttons"": ['excel', 'pdf', 'cop");
                WriteLiteral(@"y'],
                ""ordering"": false,
                ""lengthMenu"": [[12, 25, 50, -1], [12, 25, 50, ""All""]],
                ""rowsGroup"": [1],
                ""vertical_align"": 'middle',
                ""columns"":
                    [
                        { ""data"": ""MenuId"" },
                        { ""data"": ""MenuName"" },
                        { ""data"": ""ControllerName"" },
                        { ""data"": ""ActionName"" },
                        { ""data"": ""Parent"" },
                        { ""data"": ""IsPage"" },
                        { ""data"": ""IsMVC"" },
                        { ""data"": ""MenuStepName"" },
                        { ""data"": ""MenuTypeName"" },
                        { ""data"": ""IsActive"" }

                    ],
                ""columnDefs"": [
                    {
                        ""targets"": [0],
                        ""visible"": false,
                        ""searchable"": false,
                        ""orderable"": false
                    },
   ");
                WriteLiteral(@"                 { orderable: false, targets: '_all' },

                    { className: 'dt-center', targets: [1, 2, 3, 4] }
                ]
            });

        }

        function LoadParent(elementId) {
            var menuStep = parseInt($('#menuStep').val());
            debugger;
            $.ajax({
                url: apiHeader + 'api/Common/GetAllParent/' + menuStep,
                type: ""GET"",
                dataType: ""json"",
                success: function (result) {
                    $('#' + elementId + '').empty();
                    $('#' + elementId + '').append(""<option value=''>--Select Parent--</option>"");
                    for (var i = 0; i < result.length; i++) {

                        $('#' + elementId + '').append($(""<option></option>"").val(result[i].MenuId).html(result[i].MenuName));
                    }
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }");
                WriteLiteral(@"
            });

        }
        function DivHideShow() {
            debugger;
            if ($('#isPage').prop('checked')) {
                $('#controllerDiv').show();
                $('#actionDiv').show();
            }
            else {
                $('#controllerDiv').hide();
                $('#actionDiv').hide();
            }
        }

        function Add() {

            var obj = {
                MenuStepId: $('#menuStep').val(),
                ParantId: $('#parentId').val(),
                MenuName: $('#menuName').val(),
                IsMVC: $(""#isMVC"").is("":checked""),
                IsPage: $(""#isPage"").is("":checked""),
                ControllerName: $('#controllerName').val(),
                ActionName: $('#actionName').val(),
                MenuTypeId: $('#menuType').val(),
                IsActive: $(""#isActive"").is("":checked"")
            };


            $('#createMenuId').hide();
            debugger;
            $.ajax({
                ");
                WriteLiteral(@"type: ""POST"",
                url: apiHeader + 'api/Common/AddMenu',
                contentType: ""application/json;charset=utf-8"",
                data: JSON.stringify(obj),
                success: function (result) {
                    toastr.success('Menu Save Successfully.');
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });

            LoadTableData();
        }

        function Create() {

            $('#createMenuId').show();
        }
    </script>

");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
